{"version":3,"sources":["Components/images/eye-solid.svg","Components/images/chevron-left-solid.svg","Components/images/isoFOP.svg","Components/images/sign-out.svg","Components/images/listSolid.svg","Components/images/user-solid.svg","Components/images/edit-solid.png","Components/images/trash-alt-regular.svg","Components/images/edit-regular.svg","Components/images/fundacionObsPymeLogo.png","Components/Modal.js","Components/Drawer.js","Components/PreguntaGroupedSupervisor.js","Components/PreguntaSupervisor.js","Components/PreguntaGroupedOperador.js","Components/PreguntaOperador.js","Components/NavCuestionario.js","Components/Tabla.js","Components/Sidebar.js","Components/Usuarios.js","Components/altaUsuario.js","Components/login.js","Components/Perfil.js","App.js","serviceWorker.js","index.js","Components/images/hourglass-regular.svg","Components/images/check-solid.svg"],"names":["module","exports","ModalEjemplo","Modal","this","props","size","aria-labelledby","centered","Header","closeButton","Title","id","modalType","Body","className","toLowerCase","Footer","Button","onClick","onHide","to","Component","useStyles","makeStyles","rtaList","backgroundColor","list","width","height","overflowY","fullList","inline","color","fontWeight","TemporaryDrawer","anchor","classes","React","useState","right","inputObs","idPregunta","pregunta","_id","state","setState","toggleDrawer","open","event","type","key","getFechaHora","date","newDate","split","newHora","revisarBtnClicked","data","revision","observacion","usuario","mensaje","config","headers","Authorization","localStorage","getItem","axios","post","then","response","console","log","catch","error","Fragment","rol","Drawer","onClose","clsx","role","List","ListItem","ListItemText","secondary","value","Divider","revisiones","length","map","index","ListItemIcon","Typography","component","variant","created","respuestaValidada","style","overflowX","rows","placeholder","onChange","target","textAreaOnChange","Pregunta","objPregunta","estado","status","getResultByType","Form","Group","marginRight","options","resultado","Check","label","name","defaultChecked","parseInt","disabled","Control","as","defaultValue","questions","href","idPreguntaPadre","numId","mandatory","src","checksolid","alt","hourglass","getStickerByStatus","title","lastValue","marginLeft","getEditableResultByType","patch","question","PreguntaGroupedSupervisor","editable","filename","groupedResultado","Array","keys","useEffect","decodeToken","files","onChangeHandler","idUltimaRevision","fechaUltimaRevision","forEach","f1","Date","configFile","Accept","idRevision","form","FormData","append","res","url","err","PreguntaGroupedOperador","alert","NavCuestionario","addModalClose","addModalShow","fetchData","objEncuesta","encuesta","encuestaEnviableParaRevision","existePreguntaARevisar","sections","section","childQuestion","window","confirm","history","push","aprobarBtnClicked","encuestaEnviableParaAprobar","rechazarBtnClicked","validarBtnClicked","encuestaEnviableParaValidar","encuestaNoAprobable","statusPreguntas","idEncuesta","location","get","encuestas","chevron","company","slice","modified","fontSize","description","PreguntaSupervisor","userRol","PreguntaOperador","show","withRouter","columns","minWidth","align","createData","empresa","creado","modificado","root","container","maxHeight","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","searchText","setSearchText","setData","setRows","a","rows_list","toString","modifiedFullDate","createdFullDate","display","marginBottom","padding","borderRadius","outline","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","row","includes","hover","tabIndex","pathname","alignItems","textDecoration","eye","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","Sidebar","token","tokenData","isoFOP","listSolid","marginTop","userSolid","editSolid","removeItem","singout","password","action","useHistory","usuarios","nombre","username","contrase√±a","currentId","code","repeat","justifyContent","preventDefault","tipo","modificarBtnClicked","editRegular","delete","newRows","filter","obj","deleteBtnClicked","trashAltRegular","AltaUsuario","user","confirmarBtnClicked","checkinput","dataToken","userId","indexRol","indexOf","onSubmit","htmlFor","required","Login","iniciarSesionClicked","login","setItem","validationSchema","Yup","shape","email","touched","errors","isSubmitting","handleBlur","handleSubmit","require","e","onBlur","textAlign","Perfil","App","isSupervisor","effect","checkSessionExpiration","isExpired","userInfo","path","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,0OCA3CD,EAAOC,QAAU,IAA0B,kD,mQCO9BC,G,OAAb,uKAGE,OACE,kBAACC,EAAA,EAAD,iBACIC,KAAKC,MADT,CAEAC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAER,kBAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACvB,kBAACP,EAAA,EAAMQ,MAAP,CAAaC,GAAG,iCACZR,KAAKC,MAAMQ,UADf,cAIF,kBAACV,EAAA,EAAMW,KAAP,KACE,uBAAGC,UAAU,mBAAb,aACaX,KAAKC,MAAMQ,UAAUG,cADlC,4CAIF,kBAACb,EAAA,EAAMc,OAAP,KACQ,kBAACC,EAAA,EAAD,CAAQH,UAAU,qBAAqBI,QAASf,KAAKC,MAAMe,QAA3D,YAGF,kBAAC,IAAD,CAAMC,GAAG,SACP,kBAACH,EAAA,EAAD,CAAQH,UAAU,2BAAlB,kBAzBZ,GAAkCO,c,8LCQ5BC,EAAYC,YAAW,CAC3BC,QAAS,CACPC,gBAAgB,WAElBC,KAAM,CACJC,MAAO,IACPC,OAAQ,OACRC,UAAW,UAEbC,SAAU,CACRH,MAAO,OACPE,UAAW,UAEbE,OAAQ,CACNC,MAAO,UACPC,WAAY,UAID,SAASC,EAAgB9B,GACtC,IAwDc+B,EAxDRC,EAAUd,IAD6B,EAEnBe,IAAMC,SAAS,CACvCC,OAAO,EACPC,SAAU,GACVC,WAAYrC,EAAMsC,SAASC,MALgB,mBAEtCC,EAFsC,KAE/BC,EAF+B,KAQvCC,EAAe,SAACX,EAAQY,GAAT,OAAkB,SAACC,IACnB,YAAfA,EAAMC,MAAqC,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAG9DL,EAAS,2BAAKD,GAAN,kBAAcT,EAASY,OAG3BL,EAAWtC,EAAMsC,SAEjBS,EAAe,SAACC,GAEpB,IAAMC,EAAUD,EAAKE,MAAM,IAAK,GAC5BC,EAAUH,EAAKE,MAAM,IAAK,GAE9B,OADAC,EAAUA,EAAQ,GAAGD,MAAM,IAAK,IACjB,IAAID,GAGfG,EAAoB,WACtBpD,EAAMoD,oBACNX,EAAS,2BAAID,GAAL,IAAYL,OAAM,KAC1B,IAAMkB,EAAO,CACXhB,WAAYG,EAAMH,WAClBiB,SAAW,CACPC,YAAa,CAETC,QAAS,aACTC,QAASjB,EAAMJ,YAKvBsB,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAIlDC,IAAMC,KAAN,uEAAmFX,EAAMK,GACpFO,MAAM,SAACC,GAAD,OAAcC,QAAQC,IAAIF,MAChCG,OAAO,SAACC,GAAD,OAAWH,QAAQC,IAAIE,OA0GrC,OACM,kBAAC,IAAMC,SAAP,CAAgBzB,IAAK,SAEH,aAAd9C,EAAMwE,IACF,kBAAC,IAAD,CAAQ9D,UAAU,mCAAmCI,QAAS4B,EAAa,SAAS,IAApF,WAEA,kBAAC,IAAD,CAAQhC,UAAU,iCAAiCI,QAAS4B,EAAa,SAAS,IAAlF,gBAEN,kBAAC+B,EAAA,EAAD,CAAS1C,OAAQ,QAASY,KAAMH,EAAK,MAAWkC,QAAShC,EAAa,SAAS,KAxGzEX,EAyGE,QAxGd,yBACErB,UAAWiE,YAAK3C,EAAQV,KAAT,eACZU,EAAQN,SAAsB,QAAXK,GAA+B,WAAXA,IAE1C6C,KAAK,gBAIL,kBAACC,EAAA,EAAD,CAAMnE,UAAWsB,EAAQZ,SACnB,kBAAC0D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAcC,UAAW,uBAAyB1C,EAAS2C,UAGrE,kBAACC,EAAA,EAAD,MAEmC,IAA/B5C,EAAS6C,WAAWC,OACpB,oCAEI9C,EAAS6C,WAAWE,KAAI,SAAC/B,EAAUgC,GAC/B,OACI,oCAEKhC,EAASC,YACT,kBAACsB,EAAA,EAAD,CAAM/B,IAAKwC,GACV,kBAACR,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACR,EAAA,EAAD,CAAcC,UACV,kBAAC,IAAMT,SAAP,KACI,kBAACiB,EAAA,EAAD,CACIC,UAAU,OACVC,QAAQ,QACRhF,UAAWsB,EAAQL,OACnBC,MAAM,eAER0B,EAASC,YAAYC,QAAQ,iBAE/B,6BACE,mDACF,6BACEF,EAASC,YAAYE,QACvB,6BACEV,EAAaO,EAASC,YAAYoC,cAIxC,KAGRrC,EAASsC,kBACP,kBAACf,EAAA,EAAD,CAAM/B,IAAKwC,EAAOO,MAAO,CAACtE,MAAM,QAASuE,UAAU,WACjD,kBAACZ,EAAA,EAAD,MACA,kBAACJ,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACR,EAAA,EAAD,CAAcC,UACV,kBAAC,IAAMT,SAAP,KACI,kBAACiB,EAAA,EAAD,CACIC,UAAU,OACVC,QAAQ,QACRhF,UAAWsB,EAAQL,OACnBC,MAAM,eAER0B,EAASsC,kBAAkBpC,QAAQ,eAErC,6BACE,uDACF,6BACEF,EAASsC,kBAAkBX,MAC7B,6BACE3B,EAASsC,kBAAkBD,QAAU5C,EAAaO,EAASsC,kBAAkBD,SAAW,UAI9F,KAEZ,kBAACT,EAAA,EAAD,WAKV,KAIQ,aAAdlF,EAAMwE,IACF,yBAAK9D,UAAU,wBACX,8BAAUA,UAAU,gBAAgBqF,KAAM,EAAGC,YAAa,2BAA4BC,SAAU,SAACrD,GAAD,OA3FrF,SAACA,GACtB,IAAMqC,EAAQrC,EAAMsD,OAAOjB,MAC3BxC,EAAS,2BAAID,GAAL,IAAYJ,SAAS6C,KAyFwFkB,CAAiBvD,MAC5H,kBAAC,IAAD,CAAQ9B,QAASsC,EAAmB1C,UAAU,qBAA9C,qBAGN,SCkCK0F,MA7Mf,SAAkBpG,GAEd,IAAMsC,EAAWtC,EAAMqG,YAFF,EAIKnE,mBAAS,CAC/BoE,OAAQhE,EAASiE,SALA,mBAId/D,EAJc,KAIPC,EAJO,KAiDf+D,EAAkB,WACpB,OAAQlE,EAASO,MACb,IAAK,SACD,OACQ,kBAAC4D,EAAA,EAAKC,MAAN,CAAYb,MAAO,CAACc,YAAY,OAAQjG,UAAU,gCAE9C4B,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,kBAACmB,EAAA,EAAKK,MAAN,CACKhE,IAAKwC,EACLzC,KAAK,WACLkE,MAAOF,EACPG,KAAK,cACLzG,GAAI+E,EACJ2B,eAAiBC,SAAS5E,EAAS2C,OAAO,IAAMK,EAChD6B,UAAQ,EACRzG,UAAU,4BAM1C,IAAK,SACD,OAEQ,2BAAOmF,MAAO,CAACc,YAAY,OAAQjG,UAAU,+BAA+BuE,MAAO3C,EAAS2C,MAAOkC,UAAQ,IAGvH,IAAK,SACD,OACI,kBAACV,EAAA,EAAKC,MAAN,CAAYb,MAAO,CAACc,YAAY,OAAQjG,UAAU,gCAC9C,kBAAC+F,EAAA,EAAKW,QAAN,CAAc1G,UAAU,4BAA4B2G,GAAG,SAASC,aAAchF,EAASiF,UAAUL,SAAS5E,EAAS2C,OAAO,GAAKkC,UAAQ,GAE/H7E,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,4BAAQxC,IAAKwC,GAAQuB,QAMpD,IAAK,OACD,OACI,yBAAKhB,MAAO,CAACc,YAAY,OAAQjG,UAAU,qCACvC,uBAAG8G,KAAOlF,EAAS2C,OAAnB,mBAIZ,QAEI,OACQ,8BAAUY,MAAO,CAACc,YAAY,OAAQjG,UAAU,+BAA+BuE,MAAK,UAAK3C,EAAS2C,OAASkC,UAAQ,MAyEvI,OACI,oCACM,yBAAKzG,UAAU,YACb,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,oBAAb,QAAsCV,EAAMyH,gBAAkB,IAAMP,SAASlH,EAAM0H,MAAQ,GAA3F,IAAiGpF,EAASqF,UAAY,MAAQ,MAC9H,uBAAGjH,UAAU,qBArJF,WACvB,OAAQ8B,EAAM8D,QACV,IAAK,WACD,OAAO,oCACG,yBAAK5F,UAAU,sBAAsBkH,IAAKC,IAAYC,IAAI,kBAD7D,YAIX,IAAK,WACD,OAAO,oCACI,yBAAKpH,UAAU,sBAAsBkH,IAAKG,IAAWD,IAAI,kBAD7D,kBAIX,IAAK,WACD,OAAO,oCACI,yBAAKpH,UAAU,sBAAsBkH,IAAKG,IAAWD,IAAI,kBAD7D,YAIX,QACI,OAAO,MAqIKE,KAIR,yBAAKtH,UAAU,kCACX,uBAAGA,UAAU,yBAAyB4B,EAAS2F,QAEnD,uBAAGvH,UAAU,uBAAb,aAEqB,aAAjB8B,EAAM8D,OAAwB,uBAAG5F,UAAU,uBAAb,sBAA4D,KAE9F,yBAAKA,UAAU,8BACW,aAAjB8B,EAAM8D,QAAwD,IAA/BhE,EAAS6C,WAAWC,QAAmC,aAAjB5C,EAAM8D,OAAwBE,IAAoB,KACvG,aAAjBhE,EAAM8D,QAA2C,aAAjB9D,EAAM8D,QAAuD,IAA9BhE,EAAS6C,WAAWC,OAvF3E,WACxB,OAAQ9C,EAASO,MACb,IAAK,SACD,OACQ,kBAAC4D,EAAA,EAAKC,MAAN,CAAYhG,UAAU,+BAA+BmF,MAAO,CAACtE,MAAM,SAE/De,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,kBAACmB,EAAA,EAAKK,MAAN,CACKhE,IAAKwC,EACLzC,KAAK,WACLkE,MAAOF,EACPG,KAAK,cACLzG,GAAI+E,EACJ5E,UAAU,sBACVuG,eAAiBC,SAAS5E,EAAS4F,WAAW,IAAM5C,QAMpF,IAAK,SACD,OACQ,2BAAOO,MAAO,CAACsC,WAAW,KAAMzH,UAAU,oCAAoCmC,KAAK,SAASoC,MAAO3C,EAAS4F,YAExH,IAAK,SACD,OACQ,kBAACzB,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAClB,kBAAC+F,EAAA,EAAKW,QAAN,CAAc1G,UAAU,4BAA4B2G,GAAG,SAASC,aAAchF,EAAS4F,UAAY5F,EAASsE,QAAQM,SAAS5E,EAAS4F,WAAW,GAAG,MAChJ,+CAEI5F,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,4BAAQxC,IAAKwC,GAAQuB,QAMxD,IAAK,OACD,OACI,oCAEyB,aAAjBrE,EAAM8D,OACN,oCACA,2BAAO5F,UAAU,oCAAoCmC,KAAK,OAAOmE,KAAK,YAElE1E,EAAS4F,UACT,yBAAKxH,UAAU,qCACX,uBAAG8G,KAAOlF,EAAS4F,WAAnB,qBAEF,MAIN,yBAAKxH,UAAU,qCACX,uBAAG8G,KAAOlF,EAAS4F,WAAnB,sBAKpB,QAEI,OACI,8BAAWxH,UAAU,+BAA+BuE,MAAO3C,EAAS4F,aAyBkCE,GAA4B,KAC5G,cAAjB5F,EAAM8D,QAA2C,aAAjB9D,EAAM8D,OAAyBE,IAAoB,MAE5F,yBAAK9F,UAA6B,aAAjB8B,EAAM8D,OAAwB,iCAAmC,gCAC9E,kBAAC,EAAD,CAAQhE,SAAUA,EAAUc,kBA3LtB,WACtBX,EAAS,2BAAID,GAAL,IAAY8D,OAAO,iBA4LX,4BAAQ5F,UAAU,uBAAuBI,QAzLnC,WACtB2B,EAAS,2BAAID,GAAL,IAAY8D,OAAO,cAC3B,IACI5C,EAAS,CACTC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGpDC,IAAMsE,MAAN,sEAA2E/F,EAASC,IAApF,WANa,CAAEgE,OAAQ,YAMiF7C,GAC7FO,MAAM,SAAAC,GACDC,QAAQC,IAAIF,MAEjBG,OAAO,SAAAC,GAAWH,QAAQC,IAAIE,QA6KzB,eCiDT8B,MAtPf,SAAkBpG,GAEd,IAAMsC,EAAWtC,EAAMqG,YAFF,EAIKnE,mBAAS,CAC/BoE,OAAQhE,EAASiE,SALA,mBAId/D,EAJc,KAIPC,EAJO,KAmDf+D,EAAkB,WACpB,OAAQlE,EAASO,MACb,IAAK,SACD,OACQ,kBAAC4D,EAAA,EAAKC,MAAN,CAAYb,MAAO,CAACc,YAAY,OAAQjG,UAAU,gCAE9C4B,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,kBAACmB,EAAA,EAAKK,MAAN,CACKhE,IAAKwC,EACLzC,KAAK,WACLkE,MAAOF,EACPG,KAAK,cACLzG,GAAI+E,EACJ2B,eAAiBC,SAAS5E,EAAS2C,OAAO,IAAMK,EAChD6B,UAAQ,EACRzG,UAAU,4BAM1C,IAAK,SACD,OAEQ,2BAAOmF,MAAO,CAACc,YAAY,OAAQjG,UAAU,+BAA+BuE,MAAO3C,EAAS2C,MAAOkC,UAAQ,IAGvH,IAAK,SACD,OACI,kBAACV,EAAA,EAAKC,MAAN,CAAYb,MAAO,CAACc,YAAY,OAAQjG,UAAU,gCAC9C,kBAAC+F,EAAA,EAAKW,QAAN,CAAc1G,UAAU,4BAA4B2G,GAAG,SAASC,aAAchF,EAASiF,UAAUL,SAAS5E,EAAS2C,OAAO,GAAKkC,UAAQ,GAE/H7E,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,4BAAQxC,IAAKwC,GAAQuB,QAMpD,IAAK,OACD,OACI,yBAAKhB,MAAO,CAACc,YAAY,OAAQjG,UAAU,qCACvC,uBAAG8G,KAAOlF,EAAS2C,OAAnB,mBAGZ,IAAK,UACG,OACI,yBAAKvE,UAAU,6BAA6BmF,MAAO,CAACsC,WAAW,QAC5D7F,EAASiF,UAAUlC,KAAI,SAACiD,EAAUhD,GAEjC,OAAO,kBAACiD,EAAD,CACGzF,IAAKwF,EAAS/F,IACdmF,MAAQpC,EACRe,YAAaiC,EACbb,gBAAiBzH,EAAM0H,MAAM,EAC7Bc,UAAU,QAMpC,QAEI,OACQ,8BAAU3C,MAAO,CAACc,YAAY,OAAQjG,UAAU,+BAA+BuE,MAAK,UAAK3C,EAAS2C,OAASkC,UAAQ,MAuFvI,OACI,oCACM,yBAAKzG,UAAU,YACb,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,oBAAb,YAA0CV,EAAM0H,MAAQ,EAAxD,IAA6DpF,EAASqF,UAAY,MAAQ,MAC1F,uBAAGjH,UAAU,qBAEa,YAAlB4B,EAASO,KArLN,WAEnB,OAAQL,EAAM8D,QACV,IAAK,WACD,OAAO,oCACG,yBAAK5F,UAAU,sBAAsBkH,IAAKC,IAAYC,IAAI,kBAD7D,YAIX,IAAK,WACD,OAAO,oCACI,yBAAKpH,UAAU,sBAAsBkH,IAAKG,IAAWD,IAAI,kBAD7D,kBAIX,IAAK,WACD,OAAO,oCACI,yBAAKpH,UAAU,sBAAsBkH,IAAKG,IAAWD,IAAI,kBAD7D,YAIX,QACI,OAAO,MAmKCE,GACE,OAIV,yBAAKtH,UAAU,kCACX,uBAAGA,UAAU,yBAAyB4B,EAAS2F,QAG7B,YAAlB3F,EAASO,KACT,oCACA,uBAAGnC,UAAU,uBAAb,aAEqB,aAAjB8B,EAAM8D,OAAwB,uBAAG5F,UAAU,uBAAb,sBAA4D,MAEzF,6BAGT,yBAAKA,UAAU,8BACW,aAAjB8B,EAAM8D,QAAwD,IAA/BhE,EAAS6C,WAAWC,QAAmC,aAAjB5C,EAAM8D,OAAwBE,IAAoB,KACvG,aAAjBhE,EAAM8D,QAA2C,aAAjB9D,EAAM8D,QAAuD,IAA9BhE,EAAS6C,WAAWC,OA7G3E,WAC5B,OAAQ9C,EAASO,MACb,IAAK,SACD,OACQ,kBAAC4D,EAAA,EAAKC,MAAN,CAAYhG,UAAU,+BAA+BmF,MAAO,CAACtE,MAAM,SAE/De,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,kBAACmB,EAAA,EAAKK,MAAN,CACKhE,IAAKwC,EACLzC,KAAK,WACLkE,MAAOF,EACPG,KAAK,cACLzG,GAAI+E,EACJ5E,UAAU,sBACVuG,eAAiBC,SAAS5E,EAAS4F,WAAW,IAAM5C,QAMpF,IAAK,SACD,OACQ,2BAAOO,MAAO,CAACsC,WAAW,KAAMzH,UAAU,oCAAoCmC,KAAK,SAASoC,MAAO3C,EAAS4F,YAExH,IAAK,SACD,OACQ,kBAACzB,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAClB,kBAAC+F,EAAA,EAAKW,QAAN,CAAc1G,UAAU,4BAA4B2G,GAAG,SAASC,aAAchF,EAAS4F,UAAY5F,EAASsE,QAAQM,SAAS5E,EAAS4F,WAAW,GAAG,MAChJ,+CAEI5F,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,4BAAQxC,IAAKwC,GAAQuB,QAMxD,IAAK,OACD,OACI,oCAEyB,aAAjBrE,EAAM8D,OACN,oCACA,2BAAO5F,UAAU,oCAAoCmC,KAAK,OAAOmE,KAAK,YAElE1E,EAAS4F,UACT,yBAAKxH,UAAU,qCACX,uBAAG8G,KAAOlF,EAAS4F,WAAnB,qBAEF,MAIN,yBAAKxH,UAAU,qCACX,uBAAG8G,KAAOlF,EAAS4F,WAAnB,sBAKhB,IAAK,UACD,OACI,yBAAKxH,UAAU,6BAA6BmF,MAAO,CAACsC,WAAW,SAY3E,QAEI,OACI,8BAAWzH,UAAU,+BAA+BuE,MAAO3C,EAAS4F,aAiCsCE,GAA4B,KAC5G,cAAjB5F,EAAM8D,QAA2C,aAAjB9D,EAAM8D,OAAyBE,IAAoB,MAGtE,YAAlBlE,EAASO,KACT,yBAAKnC,UAA6B,aAAjB8B,EAAM8D,QAA2C,YAAlBhE,EAASO,KAAqB,iCAAmC,gCAC7G,kBAAC,EAAD,CAAQP,SAAUA,EAAUc,kBApO1B,WACtBX,EAAS,2BAAID,GAAL,IAAY8D,OAAO,iBAoOP,4BAAQ5F,UAAU,uBAAuBI,QAjOvC,WACtB2B,EAAS,2BAAID,GAAL,IAAY8D,OAAO,cAC3B,IACI5C,EAAS,CACTC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGpDC,IAAMsE,MAAN,sEAA2E/F,EAASC,IAApF,WANa,CAAEgE,OAAQ,YAMiF7C,GAC7FO,MAAM,SAAAC,GACDC,QAAQC,IAAIF,MAEjBG,OAAO,SAAAC,GAAWH,QAAQC,IAAIE,QAqNrB,YACK,Q,SCyBlB8B,MAvQf,SAAkBpG,GAEd,IAAMsC,EAAWtC,EAAMqG,YAFF,EAIKnE,mBAAS,CAC/BoE,OAAQhE,EAASiE,OACjBM,UAAWvE,EAAS4F,UACpBO,SAAU,GACVjE,IAAI,GACJkE,iBAAiB,YAAKC,MAAMrG,EAASiF,UAAUnC,QAAQwD,UATtC,mBAIdpG,EAJc,KAIPC,EAJO,KAyOrB,OAjJAoG,qBAAU,WACN,IACMrE,EADYsE,YAAYjF,aAAaC,QAAQ,UAC7Bc,KACtBnC,EAAS,2BAAID,GAAL,IAAYgC,IAAKA,OAC1B,IA8IC,oCACI,yBAAK9D,UAAU,YACX,yBAAKA,UAAU,oBACf,uBAAGA,UAAU,oBAAb,YAA0CV,EAAMyH,gBAAkB,IAAMP,SAASlH,EAAM0H,MAAQ,GAA/F,IAAqGpF,EAASqF,UAAY,MAAQ,MAC9H,uBAAGjH,UAAU,qBA5IF,WACvB,OAAQ8B,EAAM8D,QACV,IAAK,WACD,OAAO,oCACG,yBAAK5F,UAAU,sBAAsBkH,IAAKC,IAAYC,IAAI,kBAD7D,YAIX,IAAK,WACD,OAAO,oCACI,yBAAKpH,UAAU,sBAAsBkH,IAAKG,IAAWD,IAAI,kBAD7D,kBAIX,IAAK,WACD,OAAO,oCACI,yBAAKpH,UAAU,sBAAsBkH,IAAKG,IAAWD,IAAI,kBAD7D,YAIX,QACI,OAAO,MA4HKE,KAIZ,yBAAKtH,UAAU,kCACX,uBAAGA,UAAU,yBAAyB4B,EAAS2F,QAEnD,uBAAGvH,UAAU,uBAAb,aACA,uBAAGA,UAAU,uBAAb,sBACA,yBAAKA,UAAU,8BAjIH,WACpB,OAAQ4B,EAASO,MACb,IAAK,SACD,OACQ,kBAAC4D,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAElB4B,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,kBAACmB,EAAA,EAAKK,MAAN,CACKhE,IAAKwC,EACLzC,KAAK,WACLkE,MAAOF,EACPG,KAAK,cACLzG,GAAI+E,EAAM,EACV2B,eAAiBC,SAAS5E,EAAS2C,OAAO,IAAMK,EAChD6B,UAAQ,EACRzG,UAAU,4BAM1C,IAAK,SACD,OAEQ,2BAAOA,UAAU,+BAA+BuE,MAAO3C,EAAS2C,MAAOkC,UAAQ,IAG3F,IAAK,SACD,OACI,kBAACV,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAClB,kBAAC+F,EAAA,EAAKW,QAAN,CAAc1G,UAAU,4BAA4B2G,GAAG,SAASC,aAAchF,EAASsE,QAAQM,SAAS5E,EAAS2C,OAAO,GAAIkC,UAAQ,GAE5H7E,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,4BAAQxC,IAAKwC,EAAM,GAAIuB,QAMtD,IAAK,OACD,OACI,yBAAKnG,UAAU,oCAAoCmF,MAAO,CAACsC,WAAW,QAClE,uBAAGX,KAAOlF,EAAS2C,OAAnB,YAGZ,QAEI,OACQ,8BAAUvE,UAAU,+BAA+BuE,MAAK,UAAK3C,EAAS2C,OAASkC,UAAQ,KAkFzFX,GA5Ec,WAC5B,OAAQlE,EAASO,MACb,IAAK,SACD,OACQ,kBAAC4D,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAElB4B,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,kBAACmB,EAAA,EAAKK,MAAN,CACKhE,IAAKwC,EAAM,EACXzC,KAAK,QACLkE,MAAOF,EAEPG,KAAK,cACLzG,GAAI+E,EAAM,EACV5E,UAAU,sBACVuE,MAAOK,EAAM,EACbW,SAAW,SAACrD,GAAD,OAAWH,EAAS,2BAAID,GAAL,IAAYqE,UAAWjE,EAAMsD,OAAOjB,gBAMlG,IAAK,SACD,OACQ,2BAAOvE,UAAU,oCACTmC,KAAK,SACLoD,SAAW,SAACrD,GAAD,OAAWH,EAAS,2BAAID,GAAL,IAAYqE,UAAWjE,EAAMsD,OAAOjB,YAEtF,IAAK,SACD,OACQ,kBAACwB,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAClB,kBAAC+F,EAAA,EAAKW,QAAN,CAAc1G,UAAU,4BAA4B2G,GAAG,SAAUpB,SAAW,SAACrD,GAAD,OAAWH,EAAS,2BAAID,GAAL,IAAYqE,UAAWjE,EAAMsD,OAAOjB,WAC/H,+CAEI3C,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,4BAAQxC,IAAKwC,EAAM,EAAGL,MAAOK,EAAM,GAAIuB,QAM1E,IAAK,OACD,OACI,2BAAOnG,UAAU,oCAAoCmC,KAAK,OAAOmE,KAAK,UAAUf,SAAU,SAACrD,GAAD,OA3HnF,SAACA,GACpBH,EAAS,2BAAID,GAAL,IAAYqE,UAAWjE,EAAMsD,OAAO6C,MAAM,MA0H6DC,CAAgBpG,MAE3H,QAEI,OACI,8BAAUiD,MAAO,CAACsC,WAAW,QAASzH,UAAU,+BAA+BuF,SAAW,SAACrD,GAAD,OAAWH,EAAS,2BAAID,GAAL,IAAYqE,UAAWjE,EAAMsD,OAAOjB,aA6B/ImD,IAEN,yBAAK1H,UAAU,kCACX,kBAAC,EAAD,CAAQ4B,SAAUA,EAAUkC,IAAKhC,EAAMgC,MACvC,4BAAQ9D,UAAU,uBAAuBI,QAnP/B,WACtB2B,EAAS,2BAAID,GAAL,IAAY8D,OAAO,cAC3B,IAAInB,EAAa7C,EAAS6C,WACtB8D,EAAmB,GACnBC,EAAsB,GAC1B/D,EAAWgE,SAAQ,SAAC7F,GAChB,GAAyB,KAArB2F,EACAA,EAAmB3F,EAASf,IAC5B2G,EAAsB5F,EAASC,YAAYoC,YAC1C,CACD,IAAIyD,EAAK,IAAIC,KAAKH,GACT,IAAIG,KAAK/F,EAASC,YAAYoC,SAC9ByD,IACLH,EAAmB3F,EAASf,IAC5B2G,EAAsB5F,EAASC,YAAYoC,aAIvD,IAAI2D,EAAa,CACb3F,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,SAC9CyF,OAAO,0BAGTlG,EAAO,CACPhB,WAAYC,EAASC,IACrBiH,WAAaP,EACb3F,SAAW,CACPsC,kBAAmB,CACfpC,QAASK,aAAaC,QAAQ,YAC9BmB,MAAOzC,EAAMqE,aAIzB,GAAsB,SAAlBvE,EAASO,KAAiB,CAC1B,IAAM4G,EAAO,IAAIC,SACjBD,EAAKE,OAAO,QAASnH,EAAMqE,UAAWrE,EAAMqE,UAAUG,MACtDjD,IAAMC,KAAN,4DAAwEyF,EAAMH,GACzErF,MAAM,SAAA2F,GACH,IAAMlG,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGpDT,EAAO,CACHhB,WAAYC,EAASC,IACrBiH,WAAaP,EACb3F,SAAW,CACPsC,kBAAmB,CACfpC,QAASK,aAAaC,QAAQ,YAC9BmB,MAAO2E,EAAIvG,KAAK0F,MAAM,GAAGc,OAIrC9F,IAAMsE,MAAN,uEAAoFhF,EAAMK,GACzFO,MAAM,SAAAC,GACDC,QAAQC,IAAIF,MAEjBG,OAAO,SAAAC,GAAWH,QAAQC,IAAIE,SAElCD,OAAO,SAAAyF,GAAS3F,QAAQC,IAAI0F,UAChC,CACD,IAAMpG,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGpDC,IAAMsE,MAAN,uEAAoFhF,EAAMK,GAC/EO,MAAM,SAAAC,GACDC,QAAQC,IAAIF,MAEjBG,OAAO,SAAAC,GAAWH,QAAQC,IAAIE,SA4KjC,eC6DL8B,MA3Tf,SAAkBpG,GAEd,IAAMsC,EAAWtC,EAAMqG,YAFF,EAIKnE,mBAAS,CAC/BoE,OAAQhE,EAASiE,OACjBM,UAAWvE,EAAS4F,UACpBO,SAAU,GACVjE,IAAK,GACLkE,iBAAiB,YAAKC,MAAMrG,EAASiF,UAAUnC,QAAQwD,UATtC,mBAIdpG,EAJc,KAIPC,EAJO,KAiRrB,OAlLAoG,qBAAU,WACN,IACMrE,EADYsE,YAAYjF,aAAaC,QAAQ,UAC7Bc,KACtBnC,EAAS,2BAAKD,GAAN,IAAagC,IAAKA,OAC3B,IA+KC,oCACI,yBAAK9D,UAAU,YACX,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,oBAAb,YAA0CV,EAAM0H,MAAQ,EAAxD,IAA4DpF,EAASqF,UAAY,MAAQ,MACzF,uBAAGjH,UAAU,qBAEa,YAAlB4B,EAASO,KA/KN,WACvB,OAAQL,EAAM8D,QACV,IAAK,WACD,OAAO,oCACH,yBAAK5F,UAAU,sBAAsBkH,IAAKC,IAAYC,IAAI,kBADvD,YAIX,IAAK,WACD,OAAO,oCACH,yBAAKpH,UAAU,sBAAsBkH,IAAKG,IAAWD,IAAI,kBADtD,kBAIX,IAAK,WACD,OAAO,oCACH,yBAAKpH,UAAU,sBAAsBkH,IAAKG,IAAWD,IAAI,kBADtD,YAIX,QACI,OAAO,MA8JKE,GACE,OAId,yBAAKtH,UAAU,kCACX,uBAAGA,UAAU,yBAAyB4B,EAAS2F,QAG7B,YAAlB3F,EAASO,KACT,oCACA,uBAAGnC,UAAU,uBAAb,aACA,uBAAGA,UAAU,uBAAb,uBAEE,6BAEN,yBAAKA,UAAU,8BA1KH,WACpB,OAAQ4B,EAASO,MACb,IAAK,SACD,OACI,kBAAC4D,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAEd4B,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,kBAACmB,EAAA,EAAKK,MAAN,CACHhE,IAAKwC,EACLzC,KAAK,WACLkE,MAAOF,EACPG,KAAK,cACLzG,GAAI+E,EAAQ,EACZ2B,eAAgBC,SAAS5E,EAAS2C,OAAS,IAAMK,EACjD6B,UAAQ,EACRzG,UAAU,4BAMlC,IAAK,SACD,OAEI,2BAAOA,UAAU,+BAA+BuE,MAAO3C,EAAS2C,MAAOkC,UAAQ,IAGvF,IAAK,SACD,OACI,kBAACV,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAClB,kBAAC+F,EAAA,EAAKW,QAAN,CAAc1G,UAAU,4BAA4B2G,GAAG,SAASC,aAAchF,EAASsE,QAAQM,SAAS5E,EAAS2C,OAAS,GAAIkC,UAAQ,GAE9H7E,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,4BAAQxC,IAAKwC,EAAQ,GAAIuB,QAMxD,IAAK,OACD,OACI,yBAAKnG,UAAU,oCAAoCmF,MAAO,CAAEsC,WAAY,QACpE,uBAAGX,KAAMlF,EAAS2C,OAAlB,YAGZ,IAAK,UACD,OACI,yBAAKvE,UAAU,6BAA6BmF,MAAO,CAAEsC,WAAY,QAC5D7F,EAASiF,UAAUlC,KAAI,SAAC/C,EAAUgD,GAC/B,MAAwB,aAApBhD,EAASiE,OAEF,kBAACwD,EAAD,CACHjH,IAAKR,EAASC,IACdmF,MAAOpC,EACPe,YAAa/D,EACbmF,gBAAiBzH,EAAM0H,MAAM,IAG9B,SAIvB,QAEI,OACI,8BAAUhH,UAAU,+BAA+BuE,MAAK,UAAK3C,EAAS2C,OAASkC,UAAQ,KA0GtFX,GApGe,WAC5B,OAAQlE,EAASO,MACb,IAAK,SACD,OACI,kBAAC4D,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAEd4B,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,kBAACmB,EAAA,EAAKK,MAAN,CACHhE,IAAKwC,EAAQ,EACbzC,KAAK,QACLkE,MAAOF,EAEPG,KAAK,cACLzG,GAAI+E,EAAQ,EACZ5E,UAAU,sBACVuE,MAAOK,EAAQ,EACfW,SAAU,SAACrD,GAAD,OAAWH,EAAS,2BAAKD,GAAN,IAAaqE,UAAWjE,EAAMsD,OAAOjB,gBAM1F,IAAK,SACD,OACI,2BAAOvE,UAAU,oCACbmC,KAAK,SACLoD,SAAU,SAACrD,GAAD,OAAWH,EAAS,2BAAKD,GAAN,IAAaqE,UAAWjE,EAAMsD,OAAOjB,YAE9E,IAAK,SACD,OACI,kBAACwB,EAAA,EAAKC,MAAN,CAAYhG,UAAU,gCAClB,kBAAC+F,EAAA,EAAKW,QAAN,CAAc1G,UAAU,4BAA4B2G,GAAG,SAASpB,SAAU,SAACrD,GAAD,OAAWH,EAAS,2BAAKD,GAAN,IAAaqE,UAAWjE,EAAMsD,OAAOjB,WAC9H,+CAEI3C,EAASsE,QAAQvB,KAAI,SAACwB,EAAWvB,GAC7B,OAAO,4BAAQxC,IAAKwC,EAAQ,EAAGL,MAAOK,EAAQ,GAAIuB,QAM1E,IAAK,OACD,OACI,2BAAOnG,UAAU,oCAAoCmC,KAAK,OAAOmE,KAAK,UAAUf,SAAU,SAACrD,GAAD,OA5IlF,SAACA,GACrBH,EAAS,2BAAKD,GAAN,IAAaqE,UAAWjE,EAAMsD,OAAO6C,MAAM,MA2I8DC,CAAgBpG,MAE7H,IAAK,UACD,OACI,yBAAKlC,UAAU,6BAA6BmF,MAAO,CAAEsC,WAAY,SAczE,QAEI,OACI,8BAAUtC,MAAO,CAAEsC,WAAY,QAAUzH,UAAU,+BAA+BuF,SAAU,SAACrD,GAAD,OAAWH,EAAS,2BAAKD,GAAN,IAAaqE,UAAWjE,EAAMsD,OAAOjB,aAqCnJmD,IAGiB,YAAlB9F,EAASO,KACT,yBAAKnC,UAAU,kCACX,kBAAC,EAAD,CAAQ4B,SAAUA,EAAUkC,IAAKhC,EAAMgC,MACvC,4BAAQ9D,UAAU,uBAAuBI,QArSnC,WACtB,GAAI0B,EAAMqE,UAAW,CACjBpE,EAAS,2BAAKD,GAAN,IAAa8D,OAAQ,cAC7B,IAAInB,EAAa7C,EAAS6C,WACtB8D,EAAmB,GACnBC,EAAsB,GAC1B/D,EAAWgE,SAAQ,SAAC7F,GAChB,GAAyB,KAArB2F,EACAA,EAAmB3F,EAASf,IAC5B2G,EAAsB5F,EAASC,YAAYoC,YACxC,CACH,IAAIyD,EAAK,IAAIC,KAAKH,GACT,IAAIG,KAAK/F,EAASC,YAAYoC,SAC9ByD,IACLH,EAAmB3F,EAASf,IAC5B2G,EAAsB5F,EAASC,YAAYoC,aAIvD,IAAI2D,EAAa,CACb3F,QAAS,CACLC,cAAe,UAAYC,aAAaC,QAAQ,SAChDyF,OAAQ,0BAGZlG,EAAO,CACPhB,WAAYC,EAASC,IACrBiH,WAAYP,EACZ3F,SAAU,CACNsC,kBAAmB,CACfpC,QAASK,aAAaC,QAAQ,YAC9BmB,MAAOzC,EAAMqE,aAIzB,GAAsB,SAAlBvE,EAASO,KAAiB,CAC1B,IAAM4G,EAAO,IAAIC,SACjBD,EAAKE,OAAO,QAASnH,EAAMqE,UAAWrE,EAAMqE,UAAUG,MACtDjD,IAAMC,KAAN,4DAAwEyF,EAAMH,GACzErF,MAAK,SAAA2F,GACF,IAAMlG,EAAS,CACXC,QAAS,CACLC,cAAe,UAAYC,aAAaC,QAAQ,WAGxDT,EAAO,CACHhB,WAAYC,EAASC,IACrBiH,WAAYP,EACZ3F,SAAU,CACNsC,kBAAmB,CACfpC,QAASK,aAAaC,QAAQ,YAC9BmB,MAAO2E,EAAIvG,KAAK0F,MAAM,GAAGc,OAIrC9F,IAAMsE,MAAN,uEAAoFhF,EAAMK,GACrFO,MAAK,SAAAC,GACFC,QAAQC,IAAIF,MAEfG,OAAM,SAAAC,GAAWH,QAAQC,IAAIE,SAErCD,OAAM,SAAAyF,GACH3F,QAAQC,IAAI0F,GACZE,MAAM,gEAEX,CACH,IAAMtG,EAAS,CACXC,QAAS,CACLC,cAAe,UAAYC,aAAaC,QAAQ,WAGxDC,IAAMsE,MAAN,uEAAoFhF,EAAMK,GACrFO,MAAK,SAAAC,GACFC,QAAQC,IAAIF,MAEfG,OAAM,SAAAC,GAAWH,QAAQC,IAAIE,YAGtC0F,MAAM,mDAuNM,YAEF,QCjThBC,E,kDAEJ,WAAYjK,GAAO,IAAD,8BAChB,cAAMA,IAoCRkK,cAAe,kBAAM,EAAKzH,SAAL,2BAAkB,EAAKD,OAAvB,IAA8B2H,cAAe,MArChD,EAuClB/G,kBAAoB,WAClB,EAAKgH,YAAYnG,MAAK,WACpB,GAAI,EAAKzB,MAAM6H,YAAa,CAC1B,IAAMC,EAAW,EAAK9H,MAAM6H,YAC5B,EAAK5H,SAAL,2BAAkB,EAAKD,OAAvB,IAA8B+H,8BAA8B,KAC5D,EAAK9H,SAAL,2BAAkB,EAAKD,OAAvB,IAA8BgI,wBAAwB,KACtDF,EAASG,SAAStB,SAAQ,SAAAuB,GACpBA,EAAQnD,UAAU4B,SAAQ,SAACb,GACC,cAApBA,EAAS/B,QAA4C,YAAlB+B,EAASzF,MAC5C,EAAKJ,SAAL,2BAAkB,EAAKD,OAAvB,IAA8B+H,8BAA8B,KAExC,aAApBjC,EAAS/B,QAA2C,YAAlB+B,EAASzF,MAC7C,EAAKJ,SAAL,2BAAkB,EAAKD,OAAvB,IAA8BgI,wBAAwB,KAElC,YAAlBlC,EAASzF,MACTyF,EAASf,UAAU4B,SAAS,SAAAwB,GACG,cAAzBA,EAAcpE,QAChB,EAAK9D,SAAL,2BAAkB,EAAKD,OAAvB,IAA8B+H,8BAA8B,KAEjC,aAAzBI,EAAcpE,QAChB,EAAK9D,SAAL,2BAAkB,EAAKD,OAAvB,IAA8BgI,wBAAwB,cAO1E,GAAI,EAAKhI,MAAM+H,8BAAgC,EAAK/H,MAAMgI,wBACtD,GAAGI,OAAOC,QAAQ,yCAAyC,CACzD,IAAInH,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAIhDC,IAAMsE,MAAN,sEAA2E,EAAK7F,MAAM6H,YAAY9H,IAAlG,WADa,CAAEgE,OAAQ,YAC+F7C,GACjHO,MAAM,SAAAC,GACH,EAAKlE,MAAM8K,QAAQC,KAAK,YAE3B1G,OAAO,SAAAC,GAAWH,QAAQC,IAAIE,YAGvC0F,MAAM,kMAjFI,EAsFlBgB,kBAAoB,WAChB,EAAKZ,YAAYnG,MAAK,WACpB,GAAI,EAAKzB,MAAM6H,YAAa,CAC1B,IAAMC,EAAW,EAAK9H,MAAM6H,YAC5B,EAAK5H,SAAL,2BAAkB,EAAKD,OAAvB,IAA8ByI,6BAA6B,KAC3DX,EAASG,SAAStB,SAAQ,SAAAuB,GACpBA,EAAQnD,UAAU4B,SAAQ,SAACb,GACC,aAApBA,EAAS/B,QAA2C,YAAlB+B,EAASzF,MAC3C,EAAKJ,SAAL,2BAAkB,EAAKD,OAAvB,IAA8ByI,6BAA6B,KAEzC,YAAlB3C,EAASzF,MACTyF,EAASf,UAAU4B,SAAS,SAAAwB,GACG,aAAzBA,EAAcpE,QACf,EAAK9D,SAAL,2BAAkB,EAAKD,OAAvB,IAA8ByI,6BAA6B,cAOhF,GAAI,EAAKzI,MAAMyI,6BAEb,GAAGL,OAAOC,QAAQ,gCAAgC,CAChD,IAAInH,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAIhDC,IAAMsE,MAAN,sEAA2E,EAAK7F,MAAM6H,YAAY9H,IAAlG,WADa,CAAEgE,OAAQ,YAC+F7C,GACjHO,MAAM,SAAAC,GACH,EAAKlE,MAAM8K,QAAQC,KAAK,YAE3B1G,OAAO,SAAAC,GAAWH,QAAQC,IAAIE,YAGrC0F,MAAM,8GA1HE,EAgIlBkB,mBAAqB,WACjB,GAAGN,OAAOC,QAAQ,iCAAiC,CACjD,IACInH,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGlDC,IAAMsE,MAAN,sEAA2E,EAAK7F,MAAM6H,YAAY9H,IAAlG,WANa,CAAEgE,OAAQ,aAM+F7C,GACjHO,MAAM,SAAAC,GACH,EAAKlE,MAAM8K,QAAQC,KAAK,YAE3B1G,OAAO,SAAAC,GAAWH,QAAQC,IAAIE,QA5IvB,EAgJlB6G,kBAAoB,WAClB,EAAKf,YAAYnG,MAAK,WACpB,GAAI,EAAKzB,MAAM6H,YAAa,CAC1B,IAAMC,EAAW,EAAK9H,MAAM6H,YAC5B,EAAK5H,SAAL,2BAAkB,EAAKD,OAAvB,IAA8B4I,6BAA6B,KAC3Dd,EAASG,SAAStB,SAAQ,SAAAuB,GACpBA,EAAQnD,UAAU4B,SAAQ,SAACb,GACC,aAApBA,EAAS/B,QACT,EAAK9D,SAAL,2BAAkB,EAAKD,OAAvB,IAA8B4I,6BAA6B,WAK3E,GAAI,EAAK5I,MAAM4I,6BAEb,GAAGR,OAAOC,QAAQ,4CAA4C,CAC5D,IAAInH,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAIhDC,IAAMsE,MAAN,sEAA2E,EAAK7F,MAAM6H,YAAY9H,IAAlG,WADa,CAAEgE,OAAQ,YAC+F7C,GACjHO,MAAM,SAAAC,GACH,EAAKlE,MAAM8K,QAAQC,KAAK,YAE3B1G,OAAO,SAAAC,GAAWH,QAAQC,IAAIE,YAGrC0F,MAAM,6GA7KI,EAkLlBqB,oBAAsB,WACnB,EAAK5I,SAAL,2BAAmB,EAAKD,OAAxB,IAA+ByI,6BAA4B,MAjL5D,EAAKzI,MAAQ,CACX2H,cAAe,EACf3J,UAAW,GACX+J,8BAA8B,EAC9BC,wBAAwB,EACxBS,6BAA6B,EAC7BG,6BAA6B,EAC7BE,gBAAiB,GACjB9G,IAAK,IAVS,E,4LAgBZd,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAG5CyH,EAAaxL,KAAKC,MAAMwL,SAAShJ,MAAM+I,W,SACxBxH,IAAM0H,IAAN,sEAAyEF,GAAc7H,G,OAAxGQ,E,OACEwH,EAAYxH,EAASb,KAC3BtD,KAAK0C,SAAL,2BAAkB1C,KAAKyC,OAAvB,IAA8B6H,YAAYqB,EAAU,MACnD3H,IAAM0H,IAAN,6DAAwE/H,GACtEO,MAAM,SAAA2F,GACH,IAAMpF,EAAMoF,EAAIvG,KAAKmB,IACrB,EAAK/B,SAAL,2BAAkB,EAAKD,OAAvB,IAA8BgC,IAAKA,QAEtCH,OAAO,SAAAyF,GAAS3F,QAAQC,IAAI0F,M,gJAI/B/J,KAAKqK,c,+BAoJI,IAAD,OACN,OACE,oCAEErK,KAAKyC,MAAM6H,YACT,yBAAK3J,UAAU,OACX,kBAAC,IAAD,CAAMA,UAAU,aACVM,GAAG,SACD,yBACA8G,IAAI,IACJF,IAAK+D,IACLjL,UAAU,cAEXX,KAAKyC,MAAM6H,YAAYrD,KAAO,IAAKjH,KAAKyC,MAAM6H,YAAYuB,QAAQ5E,KAAO,eAEhF,4BACA,4BAAI,uCAAJ,IAA2BjH,KAAKyC,MAAM6H,YAAY9H,IAAIsJ,MAAO9L,KAAKyC,MAAM6H,YAAY9H,IAAI6C,OAAS,IACjG,4BAAI,6CAAJ,KAAmCrF,KAAKyC,MAAM6H,YAAYrD,KAA1D,KACA,4BAAI,iDAAJ,KAAsCjH,KAAKyC,MAAM6H,YAAY1E,QAAQzC,MAAM,IAAI,IAC/E,4BAAI,uDAAJ,KAA4CnD,KAAKyC,MAAM6H,YAAYyB,SAAS5I,MAAM,IAAI,IACtF,8BACK,KAGRnD,KAAKyC,MAAM6H,YAAetK,KAAKyC,MAAM6H,YAAYI,SAASpF,KAAI,SAACqF,GAC5D,OACI,oCACE,6BACA,uBAAG7E,MAAO,CAACkG,SAAS,OAAQ5D,WAAW,OAAQvG,MAAM,YAAY,gCAAS8I,EAAQzC,QAClF,uBAAGpC,MAAO,CAACkG,SAAS,OAAQ5D,WAAW,OAAQvG,MAAM,YAAY,gCAAS8I,EAAQsB,cAClF,6BAEqB,eAAnB,EAAKxJ,MAAMgC,IACXkG,EAAQnD,UAAUlC,KAAI,SAAC/C,EAAUgD,GAC7B,OAAO,kBAAC2G,EAAD,CACGnJ,IAAKR,EAASC,IACdmF,MAAQpC,EACRe,YAAa/D,EACb4J,QAAS,EAAK1J,MAAMgC,SAGjC,KAGkB,aAAnB,EAAKhC,MAAMgC,IACTkG,EAAQnD,UAAUlC,KAAI,SAAC/C,EAAUgD,GAC/B,MAAwB,aAApBhD,EAASiE,OAEF,kBAAC4F,EAAD,CACPrJ,IAAKR,EAASC,IACdmF,MAAQpC,EACRe,YAAa/D,EACb4J,QAAS,EAAK1J,MAAMgC,MAGjB,QACN,KAEP,iCAGL,KAET,yBAAK9D,UAAU,qBACQ,eAAnBX,KAAKyC,MAAMgC,KAA2C,kBAAnBzE,KAAKyC,MAAMgC,MAA4BzE,KAAKyC,MAAM6H,YAsBjF,KArBN,oCACI,kBAACxJ,EAAA,EAAD,CACIH,UAAU,kBACVI,QAAUf,KAAKmL,oBAFnB,qBAKA,kBAACrK,EAAA,EAAD,CACIH,UAAU,kBACVI,QAAUf,KAAKqD,mBAFnB,uBAKA,kBAACvC,EAAA,EAAD,CACEH,UAAU,iBACVI,QAAUf,KAAKiL,mBAFjB,oBAKA,kBAAC,EAAD,CACIoB,KAASrM,KAAKyC,MAAM2H,aACpBpJ,OAAUhB,KAAKmK,cACf1J,UAAcT,KAAKyC,MAAMhC,aAKd,aAAnBT,KAAKyC,MAAMgC,IACX,kBAAC3D,EAAA,EAAD,CACAH,UAAU,0BACVI,QAAUf,KAAKoL,mBAFf,qBAIY,W,GAtRQlK,aA+RfoL,cAAWpC,G,oGC7RpBqC,GAAU,CACd,CAAE/L,GAAI,KAAMwG,MAAO,KAAMwF,SAAU,IACnC,CAAEhM,GAAI,OAAQwG,MAAO,WAAYwF,SAAU,KAC3C,CACEhM,GAAI,UACJwG,MAAO,UACPwF,SAAU,IACVC,MAAO,UAET,CACEjM,GAAI,SACJwG,MAAO,SACPwF,SAAU,IACVC,MAAO,UAET,CACEjM,GAAI,SACJwG,MAAO,SACPwF,SAAU,IACVC,MAAO,UAET,CACEjM,GAAI,aACJwG,MAAO,aACPwF,SAAU,IACVC,MAAO,UAET,CACEjM,GAAI,WACJwG,MAAO,YACPwF,SAAU,IACVC,MAAO,WAIX,SAASC,GAAWlM,EAAIyG,EAAM0F,EAASpG,EAAQqG,EAAQC,EAAYnC,GACjE,MAAO,CAAElK,KAAIyG,OAAM0F,UAASpG,SAAQqG,SAAQC,aAAYnC,YAG1D,IAAMvJ,GAAYC,YAAW,CAC3B0L,KAAM,CACJtL,MAAO,QAETuL,UAAW,CACTC,UAAW,OAIA,SAASC,KACtB,IAAMhL,EAAUd,KADwB,EAEhBe,IAAMC,SAAS,GAFC,mBAEjC+K,EAFiC,KAE3BC,EAF2B,OAGFjL,IAAMC,SAAS,IAHb,mBAGjCiL,EAHiC,KAGpBC,EAHoB,OAIJlL,mBAAS,IAJL,mBAIjCmL,EAJiC,KAIrBC,EAJqB,OAiBlBpL,mBAAS,CAACsC,IAAI,KAjBI,mBAiB7B+I,GAjB6B,aAkBlBrL,mBAAS,IAlBS,mBAkBnC6D,EAlBmC,KAkB7ByH,EAlB6B,KAoB1C3E,qBAAU,WAAM,4CACd,kCAAA4E,EAAA,6DACM/J,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAHpD,SAMyBC,IAAM0H,IAAN,8DAAyE/H,GANlG,OAMQQ,EANR,OAOQwH,EAAYxH,EAASb,KACrBqK,EAAY,GAClBhC,EAAUvC,SAAQ,SAAAmB,GACd,IAAItH,EAAOsH,EAASwB,SAAS5I,MAAM,IAAK,GAAGyK,WACrCC,EAAmB5K,EAEnB6K,EADN7K,EAAOsH,EAAS3E,QAAQzC,MAAM,IAAK,GAAGyK,WAEhCpN,EAAK+J,EAAS/H,IAAIsJ,MAAMvB,EAAS/H,IAAI6C,OAAS,GACpDsI,EAAU3C,KAAK0B,GAAWlM,EAAI+J,EAAStD,KAAMsD,EAASsB,QAAQ5E,KAAMsD,EAAS/D,OAAQsH,EAAiBD,EAAkBtD,EAAS/H,SAErIiL,EAAQE,GACRH,EAAQ7B,GAlBV,4CADc,uBAAC,WAAD,wBAqBdtB,KACC,IAEH,IACM5F,EADYsE,YAAYjF,aAAaC,QAAQ,UAC7Bc,KAEpB,OACE,yBAAKlE,UAAU,SACX,uBAAGA,UAAU,eAAb,wBACA,yBAAKmF,MAAO,CAACiI,QAAQ,OAAQC,aAAa,SACtC,2BACIlL,KAAK,OACLmD,YAAY,kBACZH,MAAO,CAACmI,QAAQ,WAChBC,aAAa,cAAeC,QAAQ,QACpCjJ,MAAOoI,EACPpH,SAAU,SAACrD,GAAD,OAAS0K,EAAc1K,EAAMsD,OAAOjB,MAAMtE,mBAI5D,kBAACwN,EAAA,EAAD,CAAOzN,UAAWsB,EAAQ6K,MAC1B,kBAACuB,GAAA,EAAD,CAAgB1N,UAAWsB,EAAQ8K,WAC/B,kBAACuB,GAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC/B,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACCnC,GAAQjH,KAAI,SAACqJ,GAAD,OACT,kBAACC,GAAA,EAAD,CACA7L,IAAK4L,EAAOnO,GACZiM,MAAOkC,EAAOlC,MACd3G,MAAO,CAAE0G,SAAUmC,EAAOnC,WAEzBmC,EAAO3H,YAKhB,kBAAC6H,GAAA,EAAD,KAEI7I,EAAK8F,MAAMoB,EAAOE,EAAaF,EAAOE,EAAcA,GAAa9H,KAAI,SAACwJ,GACpE,OAAKA,EAAG,KAASlO,cAAcmO,SAASzB,IAAewB,EAAG,GAAOlO,cAAcmO,SAASzB,IACnFwB,EAAG,QAAYlO,cAAcmO,SAASzB,IAAewB,EAAG,OAAWlO,cAAcmO,SAASzB,IAC1FwB,EAAG,OAAWlO,cAAcmO,SAASzB,IAAewB,EAAG,WAAelO,cAAcmO,SAASzB,GAC9E,aAAR7I,EAEF,kBAACiK,GAAA,EAAD,CAAUM,OAAK,EAACnK,KAAK,WAAWoK,UAAW,EAAGlM,IAAK+L,EAAItO,IACtD+L,GAAQjH,KAAI,SAACqJ,GACV,IAAMzJ,EAAQ4J,EAAIH,EAAOnO,IACzB,MAAkB,aAAdmO,EAAOnO,GAEH,kBAACoO,GAAA,EAAD,CAAW7L,IAAK4L,EAAOnO,GAAIiM,MAAOkC,EAAOlC,OACpCvH,GAKL,kBAAC0J,GAAA,EAAD,CAAW7L,IAAK4L,EAAOnO,GAAIiM,MAAOkC,EAAOlC,OACrC,kBAAC,IAAD,CACIxL,GAAI,CAACiO,SAAS,WACTzM,MAAM,CAAE+I,WAAWtG,IAExBY,MAAO,CAACiI,QAAQ,OACRoB,WAAW,SACXC,eAAe,OACfhH,WAAW,SAEf,yBAAKzH,UAAU,aAAakH,IAAKwH,KAAKtH,IAAI,kBAC1C,uBAAGpH,UAAU,cAAb,qBASD,aAAlBmO,EAAG,OAEJ,kBAACJ,GAAA,EAAD,CAAUM,OAAK,EAACnK,KAAK,WAAWoK,UAAW,EAAGlM,IAAK+L,EAAItO,IACtD+L,GAAQjH,KAAI,SAACqJ,GACV,IAAMzJ,EAAQ4J,EAAIH,EAAOnO,IACzB,MAAkB,aAAdmO,EAAOnO,GAEH,kBAACoO,GAAA,EAAD,CAAW7L,IAAK4L,EAAOnO,GAAIiM,MAAOkC,EAAOlC,OACpCvH,GAKL,kBAAC0J,GAAA,EAAD,CAAW7L,IAAK4L,EAAOnO,GAAIiM,MAAOkC,EAAOlC,OACrC,kBAAC,IAAD,CACIxL,GAAI,CAACiO,SAAS,WACTzM,MAAM,CAAE+I,WAAWtG,IAExBY,MAAO,CAACiI,QAAQ,OACRoB,WAAW,SACXC,eAAe,OACfhH,WAAW,SAEf,yBAAKzH,UAAU,aAAakH,IAAKwH,KAAKtH,IAAI,kBAC1C,uBAAGpH,UAAU,cAAb,qBASjB,KAKd,WAMjB,kBAAC2O,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7B7J,UAAU,MACV8J,MAAOxJ,EAAKX,OACZ+H,YAAaA,EACbF,KAAMA,EACNuC,aAhKe,SAAC5M,EAAO6M,GAC/BvC,EAAQuC,IAgKAC,oBA7JsB,SAAC9M,GAC/BwK,GAAgBxK,EAAMsD,OAAOjB,OAC7BiI,EAAQ,Q,sHCVGyC,OAtDf,SAAkB3P,GAEd,IAKM4P,EAAQ/L,aAAaC,QAAQ,SAC7B+L,EAAY/G,YAAY8G,GAE9B,OACI,oCACO,yBAAKlP,UAAU,gBAEV,yBAAKA,UAAU,WACX,yBAAKmF,MAAO,CAAC,QAAW,CAAC,QAASqJ,WAAW,aACzC,yBAAKxO,UAAU,cAAckH,IAAKkI,KAAQhI,IAAI,eAC9C,uBAAIpH,UAAU,eAAd,oCAER,6BAE2B,kBAAnBmP,EAAUjL,KACV,kBAAC,IAAD,CAAM5D,GAAG,QAAQN,UAAU,iBAC3B,yBAAKA,UAAU,aAAakH,IAAKmI,KAAWjI,IAAI,kBAChD,uBAAGpH,UAAU,eAAc8G,KAAK,cAAhC,cAEE,KAGiB,kBAAnBqI,EAAUjL,KACV,kBAAC,IAAD,CAAM5D,GAAG,YAAYN,UAAU,gBAAgBmF,MAAO,CAACmK,UAAU,SAC7D,yBAAKtP,UAAU,aAAakH,IAAKqI,KAAWnI,IAAI,kBAChD,uBAAGpH,UAAU,eAAc8G,KAAK,cAAhC,aAEF,KAEF,kBAAC,IAAD,CAAMxG,GAAG,UAAUN,UAAU,gBAAgBmF,MAAO,CAACmK,UAAU,SAC3D,yBAAKtP,UAAU,YAAYkH,IAAKsI,KAAWpI,IAAI,kBAC/C,uBAAGpH,UAAU,eAAc8G,KAAK,cAAhC,oBAIZ,6BACQ,kBAAC,IAAD,CAAMxG,GAAG,SAASF,QAzChB,WACtB+C,aAAasM,WAAW,SACxBtM,aAAasM,WAAW,aAuC4CzP,UAAU,cACtD,yBAAKkH,IAAKwI,KAAStI,IAAI,eACvB,uBAAGpH,UAAU,iBAAiB8G,KAAK,WAAnC,yB,0CCvC1B8E,I,OAAU,CACd,CAAE/L,GAAI,KAAMwG,MAAO,KAAMwF,SAAU,IACnC,CAAEhM,GAAI,OAAQwG,MAAO,sBAAuBwF,SAAU,KACtD,CACEhM,GAAI,UACJwG,MAAO,UACPwF,SAAU,IACVC,MAAO,UAET,CACEjM,GAAI,WACJwG,MAAO,gBACPwF,SAAU,IACVC,MAAO,UAET,CACEjM,GAAI,MACJwG,MAAO,MACPwF,SAAU,IACVC,MAAO,UAET,CACEjM,GAAI,SACJwG,MAAO,YACPwF,SAAU,IACVC,MAAO,YAIX,SAASC,GAAWlM,EAAIyG,EAAMxD,EAAS6M,EAAU7L,EAAK8L,GACpD,MAAO,CAAE/P,KAAIyG,OAAMxD,UAAS6M,WAAU7L,MAAK8L,UAG7C,IAAMpP,GAAYC,YAAW,CAC3B0L,KAAM,CACJtL,MAAO,QAETuL,UAAW,CACTC,UAAW,OAIA,SAASC,KACtB,IAAMhL,EAAUd,KADwB,EAEhBe,IAAMC,SAAS,GAFC,mBAEjC+K,EAFiC,KAE3BC,EAF2B,OAGFjL,IAAMC,SAAS,IAHb,mBAGjCiL,EAHiC,KAGpBC,EAHoB,OAIJlL,mBAAS,IAJL,mBAIjCmL,EAJiC,KAIrBC,EAJqB,OAelBpL,mBAAS,IAfS,mBAenC6D,EAfmC,KAe7ByH,EAf6B,KAiBpC1C,EAAUyF,cAEhB1H,qBAAU,WAAM,4CACd,kCAAA4E,EAAA,6DACM/J,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAHpD,SAMyBC,IAAM0H,IAAN,kEAA6E/H,GANtG,OAMQQ,EANR,OAOQsM,EAAWtM,EAASb,KACpBqK,EAAY,GAClB8C,EAASrH,SAAQ,SAAA3F,GACfkK,EAAU3C,KAAK0B,GAAWjJ,EAAQjB,IAAKiB,EAAQiN,OAAQjN,EAAQkN,SAAUlN,EAAQmN,gBAAYnN,EAAQgB,IAAKhB,EAAQkN,cAEpHlD,EAAQE,GAZV,4CADc,uBAAC,WAAD,wBAedtD,KACC,IAEH,IA0BIwG,EAAY,GAEd,OACE,yBAAKlQ,UAAU,SACX,uBAAGA,UAAU,eAAb,uBACA,yBAAKmF,MAAO,CAACiI,QAAQ,OAAQC,aAAa,SACtC,2BACIlL,KAAK,OACLmD,YAAY,iBACZH,MAAO,CAACmI,QAAQ,WAAYC,aAAa,cAAeC,QAAQ,QAChEjJ,MAAOoI,EACPpH,SAAU,SAACrD,GAAD,OAAS0K,EAAc1K,EAAMsD,OAAOjB,MAAMtE,mBAI5D,kBAACwN,EAAA,EAAD,CAAOzN,UAAWsB,EAAQ6K,MAC1B,kBAACuB,GAAA,EAAD,CAAgB1N,UAAWsB,EAAQ8K,WAC/B,kBAACuB,GAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC/B,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACCnC,GAAQjH,KAAI,SAACqJ,GAAD,OACT,kBAACC,GAAA,EAAD,CACA7L,IAAK4L,EAAOnO,GACZiM,MAAOkC,EAAOlC,MACd3G,MAAO,CAAE0G,SAAUmC,EAAOnC,WAEzBmC,EAAO3H,YAKhB,kBAAC6H,GAAA,EAAD,KACK7I,EAAK8F,MAAMoB,EAAOE,EAAaF,EAAOE,EAAcA,GAAa9H,KAAI,SAACwJ,GACnE,OAAKA,EAAG,GAAOlO,cAAcmO,SAASzB,IAAewB,EAAG,KAASlO,cAAcmO,SAASzB,IACxFwB,EAAG,QAAYlO,cAAcmO,SAASzB,IAAewB,EAAG,IAAQlO,cAAcmO,SAASzB,GAE/E,kBAACoB,GAAA,EAAD,CAAUM,OAAK,EAACnK,KAAK,WAAWoK,UAAW,EAAGlM,IAAK+L,EAAIgC,MACtDvE,GAAQjH,KAAI,SAACqJ,GACV,IAAMzJ,EAAQ4J,EAAIH,EAAOnO,IACzB,MAAkB,WAAdmO,EAAOnO,GACW,aAAdmO,EAAOnO,GAGP,kBAACoO,GAAA,EAAD,CAAW7L,IAAK4L,EAAOnO,GAAIiM,MAAOkC,EAAOlC,OACrC,IAAIsE,OAAO7L,EAAMG,SAIP,OAAdsJ,EAAOnO,IACPqQ,EAAY3L,EAEV,kBAAC0J,GAAA,EAAD,CAAW7L,IAAK4L,EAAOnO,GAAIiM,MAAOkC,EAAOlC,OACtCvH,EAAM4G,MAAM5G,EAAMG,OAAS,MAIhCsJ,EAAOnO,GAEP,kBAACoO,GAAA,EAAD,CAAW7L,IAAK4L,EAAOnO,GAAIiM,MAAOkC,EAAOlC,OACtCvH,IAWH,kBAAC0J,GAAA,EAAD,CAAW7L,IAAK4L,EAAOnO,GAAIiM,MAAOkC,EAAOlC,MAAO3G,MAAO,CAACiI,QAAQ,OAAQoB,WAAW,SAAU6B,eAAe,SAAU/C,QAAQ,aAC1H,kBAAC,IAAD,CAAMnI,MAAO,CAACiI,QAAQ,OAAQoB,WAAW,SAAUC,eAAe,QAASrO,QAAS,SAAC8B,GAAD,OA7EpG,SAACA,GAC3BA,EAAMoO,iBACN,IAAMzQ,EAAKqC,EAAMsD,OAAO4B,IACxBgD,EAAQC,KAAK,CAACkE,SAAS,eAAgBzM,MAAM,CAACyO,KAAK,YAAaP,SAASnQ,KA0E8D2Q,CAAoBtO,KAC7G,yBAAKlC,UAAU,aAAakH,IAAKuJ,KAAarJ,IAAK8I,KAEvD,kBAAC,IAAD,CAAM/K,MAAO,CAACiI,QAAQ,OAAQoB,WAAW,SAAUC,eAAe,OAAQhH,WAAW,QAC7ErH,QAAS,SAAC8B,GAAD,OArGpC,SAACA,GACtB,IAAMrC,EAAKqC,EAAMsD,OAAO4B,IACpBpE,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGlDK,QAAQC,IAAI7D,GACZwD,IAAMqN,OAAN,qEAA2E7Q,GAAMmD,GAC9EO,MAAK,SAAA2F,GACF,IAAMyH,EAAUtL,EAAKuL,QAAO,SAAUC,GACpC,OAAOA,EAAIhR,KAAOA,KAEtBiN,EAAQ6D,MAEThN,OAAM,SAAAyF,GACL3F,QAAQC,IAAI0F,MAqFkD0H,CAAiB5O,KACvC,yBAAKlC,UAAU,aAAakH,IAAK6J,KAAiB3J,IAAK8I,UAS5E,WAKnB,kBAACvB,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7B7J,UAAU,MACV8J,MAAOxJ,EAAKX,OACZ+H,YAAaA,EACbF,KAAMA,EACNuC,aAzJe,SAAC5M,EAAO6M,GAC/BvC,EAAQuC,IAyJAC,oBAtJsB,SAAC9M,GAC/BwK,GAAgBxK,EAAMsD,OAAOjB,OAC7BiI,EAAQ,OAuJJ,yBAAKrH,MAAO,CAACtE,MAAM,OAAQuM,QAAQ,OAAQiD,eAAe,WAAYf,UAAU,SACxE,kBAAC,IAAD,CAAMhP,GAAI,CAACiO,SAAS,eAAgBzM,MAAM,CAACyO,KAAK,SAAUpL,MAAO,CAACsJ,eAAe,SAC7E,kBAAC,IAAD,CAAQzO,UAAU,cAAlB,mB,OCzNL,SAASgR,GAAY1R,GAEhC,IAAM8K,EAAUyF,cAFuB,EAIbrO,mBAAS,CAC/B8E,KAAM,GACN2K,KAAM,GACNtB,SAAU,GACV7L,IAAK,GACLjE,GAAI,KAT+B,mBAIhCiC,EAJgC,KAIzBC,EAJyB,KAYjCmP,EAAsB,WACxB,OAAQ9G,EAAQU,SAAShJ,MAAMyO,MAC3B,IAAK,OACD,GAAIY,IAAc,CACd,IACMxO,EAAO,CACTqN,SAAUlO,EAAMmP,KAChBhB,gBAAYnO,EAAM6N,SAClBI,OAAQjO,EAAMwE,KACdxC,IALU,CAAC,GAAI,aAAc,WAAY,iBAK9BhC,EAAMgC,MAEnBd,EAAS,CACXC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGlDC,IAAMC,KAAN,6DAAyEX,EAAMK,GACxEO,MAAM,SAACC,GACI8F,MAAM,qBACNc,EAAQC,KAAK,gBAExB1G,OAAO,SAACC,GAAD,OAAWH,QAAQC,IAAIE,MAEvC,MACJ,IAAK,YACD,GAAIuN,IAAa,CACb,IAAMxO,EAAO,CACTqN,SAAUlO,EAAMmP,KAChBhB,gBAAYnO,EAAM6N,UAElB3M,EAAS,CACTC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGxDC,IAAMsE,MAAN,qEAA0E7F,EAAMjC,IAAM8C,EAAMK,GACnFO,MAAM,SAACC,GACJC,QAAQC,IAAIF,GACZ8F,MAAM,8BACNc,EAAQC,KAAK,gBAEhB1G,OAAO,SAACC,GAAD,OAAWH,QAAQC,IAAIE,SAa7CuN,EAAa,WACf,MAAmB,KAAfrP,EAAMwE,MAA8B,KAAfxE,EAAMmP,MAAkC,KAAnBnP,EAAM6N,UAAiC,KAAd7N,EAAMgC,MAGzEwF,MAAM,sCACC,IAuBf,OAnBAnB,qBAAU,WACN,GAAoC,cAAhCiC,EAAQU,SAAShJ,MAAMyO,KAAqB,CAC5C,IAAMa,EAAYhJ,YAAYjF,aAAaC,QAAQ,UAC/CJ,EAAS,CACTC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGpDC,IAAM0H,IAAN,qEAAwEqG,EAAUC,QAAUrO,GAC/EO,MAAM,SAACC,GACI,IAAMb,EAAOa,EAASb,KAEhB2O,EADQ,CAAC,GAAI,aAAc,WAAY,cACtBC,QAAQ5O,EAAKmB,KACpC/B,EAAS,2BAAID,GAAL,IAAYwE,KAAK3D,EAAKoN,OAAQkB,KAAKtO,EAAKqN,SAAUL,SAAShN,EAAKsN,gBAAYnM,IAAIwN,EAAUzR,GAAG8C,EAAKd,UAErH8B,OAAO,SAACC,GAAD,OAAWH,QAAQC,IAAIE,SAEjD,IAGE,yBAAK5D,UAAU,eACX,0BAAMA,UAAU,YAAYwR,SAAUN,GAC9B,2BAAG,gCAAU9G,EAAQU,SAAShJ,MAAMyO,KAAjC,aACH,2BAAOkB,QAAQ,SAAf,sBACA,2BACInL,KAAK,SACLnE,KAAK,OACLmD,YAAY,SACZf,MAAOzC,EAAMwE,KACbf,SAAU,SAACrD,GAASH,EAAS,2BAAID,GAAL,IAAYwE,KAAKpE,EAAMsD,OAAOjB,UAC1DmN,UAAQ,EACRjL,SAA2C,cAAhC2D,EAAQU,SAAShJ,MAAMyO,OAEtC,2BAAOpL,MAAO,CAACmK,UAAU,QAASmC,QAAQ,SAA1C,WACA,2BACInL,KAAK,UACLnE,KAAK,OACLmD,YAAY,UACZf,MAAOzC,EAAMmP,KACb1L,SAAU,SAACrD,GAASH,EAAS,2BAAID,GAAL,IAAYmP,KAAK/O,EAAMsD,OAAOjB,UAC1DmN,UAAQ,IAEZ,2BAAOvM,MAAO,CAACmK,UAAU,QAASmC,QAAQ,SAA1C,YACA,2BACInL,KAAK,UACLnE,KAAK,WACLmD,YAAY,WACZf,MAAOzC,EAAM6N,SACbpK,SAAU,SAACrD,GAASH,EAAS,2BAAID,GAAL,IAAY6N,SAASzN,EAAMsD,OAAOjB,UAC9DmN,UAAQ,IAEZ,2BAAOvM,MAAO,CAACmK,UAAU,QAASmC,QAAQ,SAA1C,OACA,4BAAQtM,MAAO,CAACtE,MAAM,OAAQwM,aAAa,QAAS9I,MAAOzC,EAAMgC,IAAKyB,SAAU,SAACrD,GAASH,EAAS,2BAAID,GAAL,IAAYgC,IAAI5B,EAAMsD,OAAOjB,UAAUkC,SAA2C,cAAhC2D,EAAQU,SAAShJ,MAAMyO,MACvK,qCACA,4BAAQhM,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,eAEA,kBAAC,IAAD,CAAQnE,QAAS8Q,EAAqBlR,UAAU,oBAAhD,aAEJ,kBAAC,IAAD,CAAMM,GAAG,YAAYF,QAzEV,WACnBgK,EAAQC,KAAK,cAwE6ClF,MAAO,CAACsJ,eAAe,SACrE,kBAAC,IAAD,CAAQzO,UAAU,eAAlB,e,+BC1BT2R,OA7Gf,WAAkB,IAAD,EAEanQ,mBAAS,CAC/BwO,SAAU,GACVL,SAAU,KAJD,mBAEN7N,EAFM,KAECC,EAFD,KAOP6P,EAAuB,YAPhB,sCAQTC,CAAM/P,EAAMkO,SAAUlO,EAAM6N,WAG1BvF,EAAUyF,cAXH,4CAab,WAAqBoB,EAAMtB,GAA3B,iBAAA5C,EAAA,6DACUpK,EAAO,CACTqN,SAAUiB,EACVhB,gBAAYN,GAEZ3M,EAAS,CACTC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAPxD,SAUUC,IAAMC,KAAN,2DAAuEX,EAAMK,GAC9EO,MAAM,SAAAC,GACHL,aAAasM,WAAW,YACxBtM,aAAasM,WAAW,SACxBtM,aAAa2O,QAAQ,WAAYhQ,EAAMkO,UACvC,IAAMd,EAAQ1L,EAASb,KAAKuM,MAC5B/L,aAAa2O,QAAQ,QAAS5C,GAGlB,kBAFM9G,YAAY8G,GACRhL,KAElBkG,EAAQC,KAAK,aAEbD,EAAQC,KAAK,YAGpB1G,OAAO,SAAAC,GACJ0F,MAAM,uFACN7F,QAAQC,IAAIE,MA3BxB,4CAba,sBA4Cb,OACI,6BACI,kBAAC,KAAD,CACImO,iBAAkBC,OAAaC,MAAM,CACjCC,MAAOF,OACFE,MAAM,4BACNR,SAAS,mBAOjB,SAAApS,GAAU,IAEH6S,EAKA7S,EALA6S,QACAC,EAIA9S,EAJA8S,OACAC,EAGA/S,EAHA+S,aACAC,EAEAhT,EAFAgT,WACAC,EACAjT,EADAiT,aAEJ,OACI,yBAAKvS,UAAU,iBACf,0BAAMA,UAAU,YAAYwR,SAAUe,GAClC,yBAAKrL,IAAKsL,EAAQ,KAAsCpL,IAAI,OAAOpH,UAAU,SAC7E,2BAAOyR,QAAQ,SAAf,SACA,2BACInL,KAAK,OACLnE,KAAK,OACLmD,YAAY,qBACZf,MAAOzC,EAAMkO,SACbzK,SAAU,SAACkN,GAAD,OAAK1Q,EAAS,2BAAID,GAAL,IAAYkO,SAASyC,EAAEjN,OAAOjB,UACrDmO,OAAQJ,EACRtS,UAAWoS,EAAOF,OAASC,EAAQD,OAAS,UAE/CE,EAAOF,OAASC,EAAQD,OACrB,yBAAKlS,UAAU,kBAAkBoS,EAAOF,OAE5C,2BAAO/M,MAAO,CAACmK,UAAU,QAASmC,QAAQ,SAA1C,YACA,2BACInL,KAAK,WACLnE,KAAK,WACLmD,YAAY,mBACZf,MAAOzC,EAAM6N,SACbpK,SAAU,SAACkN,GAAD,OAAK1Q,EAAS,2BAAID,GAAL,IAAY6N,SAAS8C,EAAEjN,OAAOjB,UACrDmO,OAAQJ,EACRtS,UAAWoS,EAAOzC,UAAYwC,EAAQxC,UAAY,UAErDyC,EAAOzC,UAAYwC,EAAQxC,UACxB,yBAAK3P,UAAU,kBAAkBoS,EAAOzC,UAE5C,kBAAC,IAAD,CAAM3P,UAAU,mBAAmBI,QAASwR,EAAsBzM,MAAO,CAACmK,UAAU,QAASnN,KAAK,SAASsE,SAAU4L,GAArH,kBAGA,6BAAK,6BACL,uBAAGlN,MAAO,CAACwN,UAAU,WAAW,6CAAhC,OAA8D,8CAA9D,cCebC,OApHf,WAAmB,IAAD,EAEYpR,mBAAS,CAC/B8E,KAAM,GACN2K,KAAM,GACNtB,SAAU,GACV7L,IAAK,GACLjE,GAAI,KAPM,mBAEPiC,EAFO,KAEAC,EAFA,KAURqI,EAAUyF,cAEhB1H,qBAAU,WACF,IAAInF,EAAS,CACTC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGpDC,IAAM0H,IAAN,8DAAyE/H,GAC5DO,MAAM,SAACC,GACI,IAAMb,EAAOa,EAASb,KAEhB2O,EADQ,CAAC,GAAI,aAAc,WAAY,cACtBC,QAAQ5O,EAAKmB,KACpC/B,EAAS,2BAAID,GAAL,IAAYwE,KAAK3D,EAAKoN,OAAQkB,KAAKtO,EAAKqN,SAAUL,SAAShN,EAAKsN,gBAAYnM,IAAIwN,EAAUzR,GAAG8C,EAAKd,UAErH8B,OAAO,SAACC,GAAD,OAAWH,QAAQC,IAAIE,QACjD,IAEF,IAyBMuN,EAAa,WACf,MAAmB,KAAfrP,EAAMwE,MAA8B,KAAfxE,EAAMmP,MAAkC,KAAnBnP,EAAM6N,UAAiC,KAAd7N,EAAMgC,MAGzEwF,MAAM,sCACC,IAQf,OACI,yBAAKtJ,UAAU,eACX,0BAAMA,UAAU,aACR,2BAAG,sDACH,2BAAOyR,QAAQ,SAAf,sBACA,2BACInL,KAAK,SACLnE,KAAK,OACLmD,YAAY,SACZf,MAAOzC,EAAMwE,KACbf,SAAU,SAACrD,GAASH,EAAS,2BAAID,GAAL,IAAYwE,KAAKpE,EAAMsD,OAAOjB,UAC1DmN,UAAQ,EACRjL,UAAQ,IAEZ,2BAAOtB,MAAO,CAACmK,UAAU,QAASmC,QAAQ,SAA1C,WACA,2BACInL,KAAK,UACLnE,KAAK,OACLmD,YAAY,UACZf,MAAOzC,EAAMmP,KACb1L,SAAU,SAACrD,GAASH,EAAS,2BAAID,GAAL,IAAYmP,KAAK/O,EAAMsD,OAAOjB,UAC1DmN,UAAQ,EACRjL,UAAQ,IAEZ,2BAAOtB,MAAO,CAACmK,UAAU,QAASmC,QAAQ,SAA1C,YACA,2BACInL,KAAK,UACLnE,KAAK,WACLmD,YAAY,WACZf,MAAOzC,EAAM6N,SACbpK,SAAU,SAACrD,GAASH,EAAS,2BAAID,GAAL,IAAY6N,SAASzN,EAAMsD,OAAOjB,UAC9DmN,UAAQ,IAEZ,2BAAOvM,MAAO,CAACmK,UAAU,QAASmC,QAAQ,SAA1C,OACA,4BAAQtM,MAAO,CAACtE,MAAM,OAAQwM,aAAa,QAAS9I,MAAOzC,EAAMgC,IAAKyB,SAAU,SAACrD,GAASH,EAAS,2BAAID,GAAL,IAAYgC,IAAI5B,EAAMsD,OAAOjB,UAAUkC,UAAQ,GAC7I,qCACA,4BAAQlC,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,YACA,4BAAQA,MAAO,GAAf,eAEA,kBAAC,IAAD,CAAQnE,QA9EA,WACxB,GAAI+Q,IAAa,CACb,IAAMxO,EAAO,CACTqN,SAAUlO,EAAMmP,KAChBhB,gBAAYnO,EAAM6N,UAElB3M,EAAS,CACTC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,WAGxDC,IAAMsE,MAAN,qEAA0E7F,EAAMjC,IAAM8C,EAAMK,GACnFO,MAAM,SAACC,GAGY,kBAFM4E,YAAYjF,aAAaC,QAAQ,UAC7Bc,KAElBkG,EAAQC,KAAK,aAEbD,EAAQC,KAAK,YAGxB1G,OAAO,SAACC,GAAD,OAAWH,QAAQC,IAAIE,QAyDe5D,UAAU,oBAAhD,aAEJ,kBAAC,IAAD,CAAMI,QA9CW,WAC7BgK,EAAQC,KAAK,UA6CwClF,MAAO,CAACsJ,eAAe,SAC5D,kBAAC,IAAD,CAAQzO,UAAU,eAAlB,gB,OCET6S,OAzGf,WAAgB,IAAD,EAEarR,mBAAS,CACjCsR,cAAc,EACdC,OAAQ,KAJG,mBAENjR,EAFM,KAECC,EAFD,KAOPiR,EAAyB,WAE7B,OADyBC,YAAU9P,aAAaC,QAAQ,WAU1D,OANA+E,qBAAU,WACN6K,IACA,IAAM7D,EAAY/G,YAAYjF,aAAaC,QAAQ,UACnDrB,EAAS,2BAAID,GAAL,IAAYoR,SAAU/D,OAC/B,IAGD,kBAAC,IAAD,KACM,yBAAKnP,UAAU,OACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmT,KAAK,QAAQC,OAAQ,kBACzBJ,IAMG,oCACM7P,aAAasM,WAAW,SAC3B,kBAAC,IAAD,CAAUnP,GAAG,YAPhB,yBAAKN,UAAU,aACb,kBAAC,GAAD,CAASiR,KAAMnP,EAAMoR,WACrB,kBAAC,GAAD,UASR,kBAAC,IAAD,CAAOC,KAAK,YAAYC,OAAQ,kBAC3BJ,IAMC,oCACM7P,aAAasM,WAAW,SAC3B,kBAAC,IAAD,CAAUnP,GAAG,YAPd,yBAAKN,UAAU,aACX,kBAAC,GAAD,CAASiR,KAAMnP,EAAMoR,WACrB,kBAAC,GAAD,UAUZ,kBAAC,IAAD,CAAOC,KAAK,UAAUC,OAAQ,kBAC3BJ,IAMC,oCACI7P,aAAasM,WAAW,SAC1B,kBAAC,IAAD,CAAUnP,GAAG,YAPb,yBAAKN,UAAU,aACX,kBAAC,GAAD,CAASiR,KAAMnP,EAAMoR,WACrB,kBAAC,GAAD,UAWV,kBAAC,IAAD,CAAOC,KAAK,eAAeC,OAAQ,kBAC5BJ,IAMC,oCACI7P,aAAasM,WAAW,SAC1B,kBAAC,IAAD,CAAUnP,GAAG,YAPb,yBAAKN,UAAU,aACX,kBAAC,GAAD,CAASiR,KAAMnP,EAAMoR,WACrB,kBAAClC,GAAD,UAUd,kBAAC,IAAD,CAAOmC,KAAK,WAAWC,OAAQ,kBAC3BJ,IAUA,oCACM7P,aAAasM,WAAW,SAC5B,kBAAC,IAAD,CAAUnP,GAAG,YAXb,yBAAKN,UAAU,aACX,kBAAC,GAAD,CAASiR,KAAMnP,EAAMoR,WACjB,yBAAKlT,UAAU,oBACX,kBAAC,EAAD,CACIiR,KAAMnP,EAAMoR,gBAYlC,kBAAC,IAAD,CAAOC,KAAK,KACT,kBAAC,GAAD,WCjGGE,QACW,cAA7BnJ,OAAOY,SAASwI,UAEe,UAA7BpJ,OAAOY,SAASwI,UAEhBpJ,OAAOY,SAASwI,SAASC,MACvB,2DCZNC,IAASJ,OACP,kBAAC,IAAMK,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvQ,MAAK,SAAAwQ,GACJA,EAAaC,gBAEdrQ,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EAAMqQ,a,mBEzI5BhV,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.8ed826a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eye-solid.38842ea6.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-left-solid.450eeb69.svg\";","module.exports = __webpack_public_path__ + \"static/media/isoFOP.5dce2f0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-out.2dbd6693.svg\";","module.exports = __webpack_public_path__ + \"static/media/listSolid.7375f330.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-solid.23f9162d.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-solid.57008808.png\";","module.exports = __webpack_public_path__ + \"static/media/trash-alt-regular.8f3b7fca.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-regular.170b4532.svg\";","module.exports = __webpack_public_path__ + \"static/media/fundacionObsPymeLogo.5541a2f6.png\";","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport './Modal.css';\nimport { Link } from 'react-router-dom'\n\n\nexport class ModalEjemplo extends Component {\n\n  render(){\n  return (\n    <Modal\n    {...this.props}\n    size=\"lg\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n  >\n    <Modal.Header closeButton>\n      <Modal.Title id=\"contained-modal-title-vcenter\">\n         {this.props.modalType} Encuesta\n      </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      <p className=\"modal__bodyText\">\n        Estas por {this.props.modalType.toLowerCase()} este formulario, ¬øDeseas continuar?\n      </p>\n    </Modal.Body>\n    <Modal.Footer>\n            <Button className=\"modal__cancelarBtn\" onClick={this.props.onHide}>\n              Cancelar\n            </Button>\n          <Link to=\"/home\">\n            <Button className=\"modal__guardarCambioBtn\">\n              Aceptar\n            </Button>\n          </Link>\n        </Modal.Footer>\n \n  </Modal>\n);\n}\n}\n\n\n\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport './Drawer.css';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\n\nconst useStyles = makeStyles({\n  rtaList: {\n    backgroundColor:'#c6c6c6',\n  },\n  list: {\n    width: 300,\n    height: \"100%\",\n    overflowY: \"scroll\"\n  },\n  fullList: {\n    width: 'auto',\n    overflowY: 'scroll'\n  },\n  inline: {\n    color: \"#42536E\",\n    fontWeight: \"bold\"\n  },\n});\n\nexport default function TemporaryDrawer(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false,\n    inputObs: '',\n    idPregunta: props.pregunta._id,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const pregunta = props.pregunta;\n\n  const getFechaHora = (date) => {\n    //transforma \"2020-10-28T18:15:35.468Z\" a \"28-10-2020\"\n    const newDate = date.split(\"T\", 1);\n    var newHora = date.split(\"T\", 2);\n    newHora = newHora[1].split(\".\", 1)\n    return newHora+\" \"+newDate\n}\n\n  const revisarBtnClicked = () => {\n      props.revisarBtnClicked();\n      setState({...state, right:false});\n      const data = {\n        idPregunta: state.idPregunta,\n        revision : {\n            observacion: {\n                // falta la parte de traer usuario\n                usuario: \"adrewes123\",\n                mensaje: state.inputObs\n                }\n        }\n    };\n    \n    let config = {\n      headers: {\n        Authorization: `Bearer `+localStorage.getItem('token'),\n      }\n    }\n\n    axios.post(`https://obs-pyme-validacion-back.herokuapp.com/api/pregunta/revision`, data, config)\n        .then( (response) => console.log(response))\n        .catch( (error) => console.log(error));\n    \n    \n  }\n\n  const textAreaOnChange = (event) => {\n      const value = event.target.value;\n      setState({...state, inputObs:value});\n  }\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n    //   onClick={toggleDrawer(anchor, false)}\n    //   onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List className={classes.rtaList}>\n            <ListItem>\n                <ListItemText secondary={\"Respuesta Original: \" + pregunta.value} />\n            </ListItem>\n      </List>\n      <Divider />\n      {\n          pregunta.revisiones.length !== 0 ? \n          <>\n          {\n              pregunta.revisiones.map((revision, index) => {\n                  return (\n                      <>\n                        {\n                           revision.observacion ? \n                           <List key={index}>\n                            <ListItem>\n                              <ListItemIcon><PersonIcon /></ListItemIcon>\n                              <ListItemText secondary={\n                                  <React.Fragment>\n                                      <Typography\n                                          component=\"span\"\n                                          variant=\"body2\"\n                                          className={classes.inline}\n                                          color=\"textPrimary\"\n                                      >\n                                      { revision.observacion.usuario+\" - Supervisor\" }\n                                      </Typography>\n                                      <br/>\n                                      { <strong>Observaci√≥n:</strong> }\n                                      <br/>\n                                      { revision.observacion.mensaje }\n                                      <br/>\n                                      { getFechaHora(revision.observacion.created) }\n                                  </React.Fragment>\n                              } />\n                            </ListItem>\n                          </List>:null\n                        }\n                        {\n                          revision.respuestaValidada ? \n                            <List key={index} style={{width:\"300px\", overflowX:\"hidden\"}}>\n                              <Divider />\n                              <ListItem>\n                                <ListItemIcon><PersonIcon /></ListItemIcon>\n                                <ListItemText secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        { revision.respuestaValidada.usuario+\" - Operador\" } \n                                        </Typography>\n                                        <br/>\n                                        { <strong>Respuesta Validada:</strong> }\n                                        <br/>\n                                        { revision.respuestaValidada.value }\n                                        <br/>\n                                        { revision.respuestaValidada.created ? getFechaHora(revision.respuestaValidada.created) : null }\n                                    </React.Fragment>\n                                } />\n                              </ListItem>\n                          </List> : null\n                        }\n                        <Divider />\n                      </>\n                  )\n              })\n          }\n        </> : null\n      }\n      \n      {\n        props.rol !== \"OPERADOR\" ?\n            <div className=\"drawer__inputSection\">\n                <textarea className=\"drawer__input\" rows={5} placeholder={\"Escriba su comentario...\"} onChange={(event) => textAreaOnChange(event)} />\n                <Button onClick={revisarBtnClicked} className=\"drawer__inputBtun\" >Enviar a Revisar</Button>\n            </div> \n          :\n          null\n      }\n\n    </div>\n  );\n\n  return (\n        <React.Fragment key={'right'}>\n          {\n            props.rol !== \"OPERADOR\" ?\n                <Button className=\"drawer__btnObservacionSupervisor\" onClick={toggleDrawer('right', true)}>Revisar</Button>\n            :\n                <Button className=\"drawer__btnObservacionOperador\" onClick={toggleDrawer('right', true)}>Obervaciones</Button>\n          }\n          <Drawer  anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\n            {list('right')}\n          </Drawer>\n        </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport './Pregunta.css';\nimport hourglass from './images/hourglass-regular.svg';\nimport checksolid from './images/check-solid.svg'\nimport { Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Drawer from './Drawer';\nimport axios from 'axios';\n\n \nfunction Pregunta(props) {\n\n    const pregunta = props.objPregunta;\n\n    const [state, setState] = useState({\n        estado: pregunta.status,\n    })\n\n    const revisarBtnClicked = () => {\n        setState({...state, estado:\"REVISION\"});\n    }\n\n    const aprobarBtnClicked = () => {\n        setState({...state, estado:\"APROBADA\"});\n        const data = { status: 'APROBADA' };\n        let config = {\n            headers: {\n              Authorization: `Bearer `+localStorage.getItem('token'),\n            }\n          };\n        axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/pregunta/${pregunta._id}/status`, data, config)\n                  .then( response => { \n                        console.log(response) \n                    } )\n                  .catch( error => { console.log(error) })\n    }\n\n    const getStickerByStatus = () => {\n        switch (state.estado) {\n            case \"APROBADA\":\n                return <>\n                          <img className=\"pregunta__hourglass\" src={checksolid} alt=\"hourglass.svg\"/>\n                          Aprobado\n                       </>\n            case \"REVISION\":\n                return <>\n                           <img className=\"pregunta__hourglass\" src={hourglass} alt=\"hourglass.svg\"/>\n                           En revisi√≥n\n                       </>\n            case \"VALIDADA\":\n                return <>\n                           <img className=\"pregunta__hourglass\" src={hourglass} alt=\"hourglass.svg\"/>\n                           Validada\n                       </>\n            default:\n                return null;\n        }\n    }\n\n    const getResultByType = () => {\n        switch (pregunta.type) {\n            case \"CHOICE\":\n                return (\n                        <Form.Group style={{marginRight:\"5px\"}} className=\"pregunta__formGroupContainer\">\n                        { \n                            pregunta.options.map((resultado, index) => {\n                                return <Form.Check \n                                            key={index}\n                                            type=\"checkbox\" \n                                            label={resultado}\n                                            name=\"choiceRadio\"\n                                            id={index} \n                                            defaultChecked={ parseInt(pregunta.value)-1 === index }\n                                            disabled\n                                            className=\"product__choiceItem\"\n                                        />\n                            })\n                        }\n                        </Form.Group>\n                )\n            case \"NUMBER\":\n                return (\n                    // <div className=\"pregunta__respuestaContainer\">\n                        <input style={{marginRight:\"5px\"}} className=\"pregunta__respuestaContainer\" value={pregunta.value} disabled/>\n                    // {/* </div> */}\n                )\n            case \"SELECT\":\n                return (\n                    <Form.Group style={{marginRight:\"5px\"}} className=\"pregunta__formGroupContainer\">\n                        <Form.Control className=\"pregunta__desplegableItem\" as=\"select\" defaultValue={pregunta.questions[parseInt(pregunta.value)-1] } disabled>\n                            {\n                                pregunta.options.map((resultado, index)=>{\n                                    return <option key={index}>{resultado}</option>\n                                })\n                            }\n                        </Form.Control>\n                    </Form.Group>\n                )\n            case \"FILE\":\n                return (\n                    <div style={{marginRight:\"5px\"}} className=\"pregunta__inputRespuestaContainer\">\n                        <a href={ pregunta.value }>Archivo Subido</a>\n                    </div>\n                )\n\n            default:\n                // case \"text\" or other\n                return (\n                        <textarea style={{marginRight:\"5px\"}} className=\"pregunta__respuestaContainer\" value={`${pregunta.value}`} disabled />\n                )\n        }\n        \n    }\n\n    const getEditableResultByType = () => {\n            switch (pregunta.type) {\n                case \"CHOICE\":\n                    return (\n                            <Form.Group className=\"pregunta__formGroupContainer\" style={{width:\"auto\"}}> \n                            { \n                                pregunta.options.map((resultado, index) => {\n                                    return <Form.Check \n                                                key={index}\n                                                type=\"checkbox\" \n                                                label={resultado}\n                                                name=\"choiceRadio\"\n                                                id={index} \n                                                className=\"product__choiceItem\"\n                                                defaultChecked={ parseInt(pregunta.lastValue)-1 === index }\n                                            />\n                                })\n                            }\n                            </Form.Group>\n                    )\n                case \"NUMBER\":\n                    return (\n                            <input style={{marginLeft:\"0\"}} className=\"pregunta__inputRespuestaContainer\" type=\"number\" value={pregunta.lastValue} /> \n                    )\n                case \"SELECT\":\n                    return (\n                            <Form.Group className=\"pregunta__formGroupContainer\">\n                                <Form.Control className=\"pregunta__desplegableItem\" as=\"select\" defaultValue={pregunta.lastValue ? pregunta.options[parseInt(pregunta.lastValue)-1]:null}>\n                                    <option>Seleccionar</option>\n                                    {\n                                        pregunta.options.map((resultado, index)=>{\n                                            return <option key={index}>{resultado}</option>\n                                        })\n                                    }\n                                </Form.Control>\n                            </Form.Group>\n                    )\n                case \"FILE\":\n                    return (\n                        <>\n                            {\n                                state.estado !== \"VALIDADA\" ?\n                                <>  \n                                <input className=\"pregunta__inputRespuestaContainer\" type=\"file\" name=\"archivo\" />\n                                {\n                                    pregunta.lastValue ? \n                                    <div className=\"pregunta__inputRespuestaContainer\">\n                                        <a href={ pregunta.lastValue }>Archivo Validado</a>\n                                    </div>\n                                    : null\n                                }\n                                </>\n                                : \n                                <div className=\"pregunta__inputRespuestaContainer\">\n                                    <a href={ pregunta.lastValue }>Archivo Validado</a>\n                                </div>\n                            }\n                        </>\n                    )\n                default:\n                    // case \"text\" or other\n                    return (\n                        <textarea  className=\"pregunta__respuestaContainer\" value={pregunta.lastValue} />\n                    )\n            }\n    }\n\n    return (\n        <>  \n            { <div className=\"pregunta\">\n                <div className=\"pregunta__header\">\n                    <p className=\"pregunta__numero\">Item {props.idPreguntaPadre + \".\" + parseInt(props.numId + 1)} { pregunta.mandatory ? \"(*)\" : null }</p>\n                    <p className=\"pregunta__sticker\">\n                        {   \n                            getStickerByStatus()\n                        }\n                        </p>\n                    </div>\n                    <div className=\"pregunta__descripcionContainer\">\n                        <p className=\"pregunta__descripcion\">{pregunta.title}</p>\n                    </div>\n                    <p className=\"pregunta__respuesta\">Respuesta</p>\n                    {\n                        state.estado === \"VALIDADA\" ? <p className=\"pregunta__respuesta\">Respuesta Validada</p> : null\n                    }\n                    <div className=\"pregunta__respuestaGeneral\">\n                        {   (state.estado === \"APROBADA\" && pregunta.revisiones.length === 0 ) || state.estado === \"VALIDADA\" ? getResultByType() : null }\n                        {   state.estado === \"VALIDADA\" || (state.estado === \"APROBADA\" && pregunta.revisiones.length !==0) ? getEditableResultByType() : null  }\n                        {   (state.estado === \"PENDIENTE\" || state.estado === \"REVISION\") ? getResultByType() : null }\n                    </div>\n                    <div className={ state.estado === \"VALIDADA\" ? \"pregunta__btnSectionEnRevision\" : \"pregunta__btnSectionAprobado\"} >\n                        <Drawer pregunta={pregunta} revisarBtnClicked={revisarBtnClicked} />\n                        {/* <button className=\"pregunta__btnRevisar\" onClick={revisarBtnClicked} >Revisar</button> */}\n                        <button className=\"pregunta__btnAprobar\" onClick={aprobarBtnClicked}>Aprobar</button>\n                    </div>\n                </div> }\n        </>\n    )\n\n}\n\nexport default Pregunta;","import React, { useState } from 'react';\nimport './Pregunta.css';\nimport hourglass from './images/hourglass-regular.svg';\nimport checksolid from './images/check-solid.svg'\nimport { Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Drawer from './Drawer';\nimport axios from 'axios';\nimport PreguntaGroupedSupervisor from './PreguntaGroupedSupervisor';\n \nfunction Pregunta(props) {\n\n    const pregunta = props.objPregunta;\n\n    const [state, setState] = useState({\n        estado: pregunta.status,\n    })\n\n    const revisarBtnClicked = () => {\n        setState({...state, estado:\"REVISION\"});\n    }\n\n    const aprobarBtnClicked = () => {\n        setState({...state, estado:\"APROBADA\"});\n        const data = { status: 'APROBADA' };\n        let config = {\n            headers: {\n              Authorization: `Bearer `+localStorage.getItem('token'),\n            }\n          };\n        axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/pregunta/${pregunta._id}/status`, data, config)\n                  .then( response => { \n                        console.log(response) \n                    } )\n                  .catch( error => { console.log(error) })\n    }\n\n\n    const getStickerByStatus = () => {\n\n            switch (state.estado) {\n                case \"APROBADA\":\n                    return <>\n                              <img className=\"pregunta__hourglass\" src={checksolid} alt=\"hourglass.svg\"/>\n                              Aprobado\n                           </>\n                case \"REVISION\":\n                    return <>\n                               <img className=\"pregunta__hourglass\" src={hourglass} alt=\"hourglass.svg\"/>\n                               En revisi√≥n\n                           </>\n                case \"VALIDADA\":\n                    return <>\n                               <img className=\"pregunta__hourglass\" src={hourglass} alt=\"hourglass.svg\"/>\n                               Validada\n                           </>\n                default:\n                    return null;\n            }\n    }\n\n    const getResultByType = () => {\n        switch (pregunta.type) {\n            case \"CHOICE\":\n                return (\n                        <Form.Group style={{marginRight:\"5px\"}} className=\"pregunta__formGroupContainer\">\n                        { \n                            pregunta.options.map((resultado, index) => {\n                                return <Form.Check \n                                            key={index}\n                                            type=\"checkbox\" \n                                            label={resultado}\n                                            name=\"choiceRadio\"\n                                            id={index} \n                                            defaultChecked={ parseInt(pregunta.value)-1 === index }\n                                            disabled\n                                            className=\"product__choiceItem\"\n                                        />\n                            })\n                        }\n                        </Form.Group>\n                )\n            case \"NUMBER\":\n                return (\n                    // <div className=\"pregunta__respuestaContainer\">\n                        <input style={{marginRight:\"5px\"}} className=\"pregunta__respuestaContainer\" value={pregunta.value} disabled/>\n                    // {/* </div> */}\n                )\n            case \"SELECT\":\n                return (\n                    <Form.Group style={{marginRight:\"5px\"}} className=\"pregunta__formGroupContainer\">\n                        <Form.Control className=\"pregunta__desplegableItem\" as=\"select\" defaultValue={pregunta.questions[parseInt(pregunta.value)-1] } disabled>\n                            {\n                                pregunta.options.map((resultado, index)=>{\n                                    return <option key={index}>{resultado}</option>\n                                })\n                            }\n                        </Form.Control>\n                    </Form.Group>\n                )\n            case \"FILE\":\n                return (\n                    <div style={{marginRight:\"5px\"}} className=\"pregunta__inputRespuestaContainer\">\n                        <a href={ pregunta.value }>Archivo Subido</a>\n                    </div>\n                )\n            case \"GROUPED\":\n                    return (\n                        <div className=\"pregunta__groupedContainer\" style={{marginLeft:'0px'}}>\n                         { pregunta.questions.map((question, index) => {\n\n                            return <PreguntaGroupedSupervisor\n                                      key={question._id}\n                                      numId={ index }\n                                      objPregunta={question}\n                                      idPreguntaPadre={props.numId+1}\n                                      editable={false}\n                                      //userRol={this.state.rol}\n                                   />\n                        }) }\n                        </div>\n                    )\n            default:\n                // case \"text\" or other\n                return (\n                        <textarea style={{marginRight:\"5px\"}} className=\"pregunta__respuestaContainer\" value={`${pregunta.value}`} disabled />\n                )\n        }\n        \n    }\n\n    const getEditableResultByType = () => {\n        switch (pregunta.type) {\n            case \"CHOICE\":\n                return (\n                        <Form.Group className=\"pregunta__formGroupContainer\" style={{width:\"auto\"}}> \n                        { \n                            pregunta.options.map((resultado, index) => {\n                                return <Form.Check \n                                            key={index}\n                                            type=\"checkbox\" \n                                            label={resultado}\n                                            name=\"choiceRadio\"\n                                            id={index} \n                                            className=\"product__choiceItem\"\n                                            defaultChecked={ parseInt(pregunta.lastValue)-1 === index }\n                                        />\n                            })\n                        }\n                        </Form.Group>\n                )\n            case \"NUMBER\":\n                return (\n                        <input style={{marginLeft:\"0\"}} className=\"pregunta__inputRespuestaContainer\" type=\"number\" value={pregunta.lastValue} /> \n                )\n            case \"SELECT\":\n                return (\n                        <Form.Group className=\"pregunta__formGroupContainer\">\n                            <Form.Control className=\"pregunta__desplegableItem\" as=\"select\" defaultValue={pregunta.lastValue ? pregunta.options[parseInt(pregunta.lastValue)-1]:null}>\n                                <option>Seleccionar</option>\n                                {\n                                    pregunta.options.map((resultado, index)=>{\n                                        return <option key={index}>{resultado}</option>\n                                    })\n                                }\n                            </Form.Control>\n                        </Form.Group>\n                )\n            case \"FILE\":\n                return (\n                    <>\n                        {\n                            state.estado !== \"VALIDADA\" ?\n                            <>  \n                            <input className=\"pregunta__inputRespuestaContainer\" type=\"file\" name=\"archivo\" />\n                            {\n                                pregunta.lastValue ? \n                                <div className=\"pregunta__inputRespuestaContainer\">\n                                    <a href={ pregunta.lastValue }>Archivo Validado</a>\n                                </div>\n                                : null\n                            }\n                            </>\n                            : \n                            <div className=\"pregunta__inputRespuestaContainer\">\n                                <a href={ pregunta.lastValue }>Archivo Validado</a>\n                            </div>\n                        }\n                    </>\n                )\n                case \"GROUPED\":\n                    return (\n                        <div className=\"pregunta__groupedContainer\" style={{marginLeft:'0px'}}>\n                         {/* { pregunta.questions.map((pregunta, index) => {\n                            return <PreguntaGroupedSupervisor\n                                      key={pregunta._id}\n                                      numId={ index }\n                                      objPregunta={pregunta}\n                                      editable={true}\n                                      //userRol={this.state.rol}\n                                   />\n                        }) } */}\n                        </div>\n                    )\n            default:\n                // case \"text\" or other\n                return (\n                    <textarea  className=\"pregunta__respuestaContainer\" value={pregunta.lastValue} />\n                )\n        }\n    }\n\n    return (\n        <>  \n            { <div className=\"pregunta\">\n                <div className=\"pregunta__header\">\n                    <p className=\"pregunta__numero\">Pregunta {props.numId + 1} { pregunta.mandatory ? \"(*)\" : null }</p>\n                    <p className=\"pregunta__sticker\">\n                        {   \n                            pregunta.type !== \"GROUPED\" ?\n                            getStickerByStatus()\n                            : null\n                        }\n                        </p>\n                    </div>\n                    <div className=\"pregunta__descripcionContainer\">\n                        <p className=\"pregunta__descripcion\">{pregunta.title}</p>\n                    </div>\n                    {\n                        pregunta.type !== \"GROUPED\" ? \n                        <>\n                        <p className=\"pregunta__respuesta\">Respuesta</p>\n                        {\n                            state.estado === \"VALIDADA\" ? <p className=\"pregunta__respuesta\">Respuesta Validada</p> : null\n                        }\n                        </>: <br/>\n                    }\n    \n                    <div className=\"pregunta__respuestaGeneral\">\n                        {   (state.estado === \"APROBADA\" && pregunta.revisiones.length === 0 ) || state.estado === \"VALIDADA\" ? getResultByType() : null }\n                        {   state.estado === \"VALIDADA\" || (state.estado === \"APROBADA\" && pregunta.revisiones.length !==0) ? getEditableResultByType() : null  }\n                        {   (state.estado === \"PENDIENTE\" || state.estado === \"REVISION\") ? getResultByType() : null }\n                    </div>\n                    {\n                        pregunta.type !== \"GROUPED\" ?\n                        <div className={ state.estado === \"VALIDADA\" && pregunta.type !== \"GROUPED\" ? \"pregunta__btnSectionEnRevision\" : \"pregunta__btnSectionAprobado\"} >\n                            <Drawer pregunta={pregunta} revisarBtnClicked={revisarBtnClicked} />\n                            <button className=\"pregunta__btnAprobar\" onClick={aprobarBtnClicked}>Aprobar</button>\n                        </div> : null\n                    }\n                </div> }\n        </>\n    )\n\n}\n\nexport default Pregunta;","import React, { useState, useEffect } from 'react';\nimport './Pregunta.css';\nimport hourglass from './images/hourglass-regular.svg';\nimport checksolid from './images/check-solid.svg'\nimport { Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Drawer from './Drawer';\nimport { decodeToken } from \"react-jwt\";\nimport axios from 'axios';\n \nfunction Pregunta(props) {\n\n    const pregunta = props.objPregunta;\n\n    const [state, setState] = useState({\n        estado: pregunta.status,\n        resultado: pregunta.lastValue,\n        filename: '',\n        rol:'',\n        groupedResultado: [...Array(pregunta.questions.length).keys()]\n    })\n        \n    const validarBtnClicked = () => {\n        setState({...state, estado:\"VALIDADA\"});\n        var revisiones = pregunta.revisiones;\n        var idUltimaRevision = '';\n        var fechaUltimaRevision = ''\n        revisiones.forEach((revision)=>{\n            if (idUltimaRevision === ''){\n                idUltimaRevision = revision._id;\n                fechaUltimaRevision = revision.observacion.created;\n            }else{\n                var f1 = new Date(fechaUltimaRevision);\n                var f2 = new Date(revision.observacion.created);\n                if( f2 > f1){\n                    idUltimaRevision = revision._id;\n                    fechaUltimaRevision = revision.observacion.created;\n                }\n            }\n        })\n        let configFile = {\n            headers: {\n              Authorization: `Bearer `+localStorage.getItem('token'),\n              Accept:'application/form-data'\n            }\n          }\n        var data = {\n            idPregunta: pregunta._id,\n            idRevision : idUltimaRevision,\n            revision : {\n                respuestaValidada: {\n                    usuario: localStorage.getItem('username'),\n                    value: state.resultado\n                }\n            }\n        }\n        if( pregunta.type === 'FILE' ){\n            const form = new FormData();\n            form.append('files', state.resultado, state.resultado.name);\n            axios.post(`https://obs-pyme-validacion-back.herokuapp.com/api/upload`, form, configFile)\n                .then( res => { \n                    const config = {\n                        headers: {\n                          Authorization: `Bearer `+localStorage.getItem('token')\n                        }\n                      }\n                    data = {\n                        idPregunta: pregunta._id,\n                        idRevision : idUltimaRevision,\n                        revision : {\n                            respuestaValidada: {\n                                usuario: localStorage.getItem('username'),\n                                value: res.data.files[0].url\n                            }\n                        }\n                    }\n                    axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/pregunta/revision`, data, config)\n                    .then( response => { \n                          console.log(response) \n                      } )\n                    .catch( error => { console.log(error) })\n                 })\n                .catch( err => { console.log(err) })\n        }else{\n            const config = {\n                headers: {\n                  Authorization: `Bearer `+localStorage.getItem('token')\n                }\n              }\n            axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/pregunta/revision`, data, config)\n                      .then( response => { \n                            console.log(response) \n                        } )\n                      .catch( error => { console.log(error) })\n        }\n\n    }\n\n    useEffect(()=>{\n        const tokenData = decodeToken(localStorage.getItem('token'));\n        const rol = tokenData.role;\n        setState({...state, rol: rol})\n    }, [])\n\n    const onChangeHandler= (event) =>{\n        setState({...state, resultado: event.target.files[0]})\n    }\n\n    const getStickerByStatus = () => {\n        switch (state.estado) {\n            case \"APROBADA\":\n                return <>\n                          <img className=\"pregunta__hourglass\" src={checksolid} alt=\"hourglass.svg\"/>\n                          Aprobado\n                       </>\n            case \"REVISION\":\n                return <>\n                           <img className=\"pregunta__hourglass\" src={hourglass} alt=\"hourglass.svg\"/>\n                           En revisi√≥n\n                       </>\n            case \"VALIDADA\":\n                return <>\n                           <img className=\"pregunta__hourglass\" src={hourglass} alt=\"hourglass.svg\"/>\n                           Validada\n                       </>\n            default:\n                return null;\n        }\n    }\n\n    const getResultByType = () => {\n        switch (pregunta.type) {\n            case \"CHOICE\":\n                return (\n                        <Form.Group className=\"pregunta__formGroupContainer\">\n                        { \n                            pregunta.options.map((resultado, index) => {\n                                return <Form.Check \n                                            key={index}\n                                            type=\"checkbox\" \n                                            label={resultado}\n                                            name=\"choiceRadio\"\n                                            id={index+1} \n                                            defaultChecked={ parseInt(pregunta.value)-1 === index }\n                                            disabled\n                                            className=\"product__choiceItem\"\n                                        />\n                            })\n                        }\n                        </Form.Group>\n                )\n            case \"NUMBER\":\n                return (\n                    // <div className=\"pregunta__respuestaContainer\">\n                        <input className=\"pregunta__respuestaContainer\" value={pregunta.value} disabled/>\n                    // {/* </div> */}\n                )\n            case \"SELECT\":\n                return (\n                    <Form.Group className=\"pregunta__formGroupContainer\">\n                        <Form.Control className=\"pregunta__desplegableItem\" as=\"select\" defaultValue={pregunta.options[parseInt(pregunta.value)-1]} disabled>\n                            {\n                                pregunta.options.map((resultado, index)=>{\n                                    return <option key={index+1}>{resultado}</option>\n                                })\n                            }\n                        </Form.Control>\n                    </Form.Group>\n                )\n            case \"FILE\":\n                return (\n                    <div className=\"pregunta__inputRespuestaContainer\" style={{marginLeft:'0px'}}>\n                        <a href={ pregunta.value }>Archivo</a>\n                    </div>\n                )\n            default:\n                // case \"text\" or other\n                return (\n                        <textarea className=\"pregunta__respuestaContainer\" value={`${pregunta.value}`} disabled />\n                )\n        }\n        \n    }\n\n    const getEditableResultByType = () => {\n        switch (pregunta.type) {\n            case \"CHOICE\":\n                return (\n                        <Form.Group className=\"pregunta__formGroupContainer\"> \n                        { \n                            pregunta.options.map((resultado, index) => {\n                                return <Form.Check \n                                            key={index+1}\n                                            type=\"radio\" \n                                            label={resultado}\n                                            // defaultChecked={ state.resultado ? parseInt(state.resultado)-1 === index : null }\n                                            name=\"choiceRadio\"\n                                            id={index+1} \n                                            className=\"product__choiceItem\"\n                                            value={index+1}\n                                            onChange={ (event) => setState({...state, resultado: event.target.value}) }\n                                        />\n                            })\n                        }\n                        </Form.Group>\n                )\n            case \"NUMBER\":\n                return (\n                        <input className=\"pregunta__inputRespuestaContainer\" \n                                type=\"number\"\n                                onChange={ (event) => setState({...state, resultado: event.target.value}) }/>\n                )\n            case \"SELECT\":\n                return (\n                        <Form.Group className=\"pregunta__formGroupContainer\">\n                            <Form.Control className=\"pregunta__desplegableItem\" as=\"select\"  onChange={ (event) => setState({...state, resultado: event.target.value}) } >\n                                <option>Seleccionar</option>\n                                {\n                                    pregunta.options.map((resultado, index)=>{\n                                        return <option key={index+1} value={index+1}>{resultado}</option>\n                                    })\n                                }\n                            </Form.Control>\n                        </Form.Group>\n                )\n            case \"FILE\":\n                return (\n                    <input className=\"pregunta__inputRespuestaContainer\" type=\"file\" name=\"archivo\" onChange={(event)=>onChangeHandler(event)} />\n                )\n            default:\n                // case \"text\" or other\n                return (\n                    <textarea style={{marginLeft:'10px'}} className=\"pregunta__respuestaContainer\" onChange={ (event) => setState({...state, resultado: event.target.value}) }/>\n                )\n        }\n    }\n\n    const groupedResultadoChanged = (event, index) => {\n                    const resultList = state.groupedResultado;\n                    resultList[index] = event.target.value\n                    setState({ ...state, groupedResultado: resultList})\n    }\n\n    return (\n        <>  \n            <div className=\"pregunta\">\n                <div className=\"pregunta__header\">\n                <p className=\"pregunta__numero\">Pregunta {props.idPreguntaPadre + \".\" + parseInt(props.numId + 1)} { pregunta.mandatory ? \"(*)\" : null }</p>\n                    <p className=\"pregunta__sticker\">\n                        {   \n                            getStickerByStatus()\n                        }\n                    </p>\n                </div>\n                <div className=\"pregunta__descripcionContainer\">\n                    <p className=\"pregunta__descripcion\">{pregunta.title}</p>\n                </div>\n                <p className=\"pregunta__respuesta\">Respuesta</p>\n                <p className=\"pregunta__respuesta\">Respuesta Validada</p>\n                <div className=\"pregunta__respuestaGeneral\">\n                    { getResultByType()    }\n                    { getEditableResultByType() }\n                </div>\n                <div className=\"pregunta__btnSectionEnRevision\">\n                    <Drawer pregunta={pregunta} rol={state.rol} />\n                    <button className=\"pregunta__btnValidar\" onClick={validarBtnClicked} >Validar</button>\n                </div>\n            </div>\n        </>\n    )\n\n}\n\nexport default Pregunta;","import React, { useState, useEffect } from 'react';\nimport './Pregunta.css';\nimport hourglass from './images/hourglass-regular.svg';\nimport checksolid from './images/check-solid.svg'\nimport { Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Drawer from './Drawer';\nimport { decodeToken } from \"react-jwt\";\nimport axios from 'axios';\nimport PreguntaGroupedOperador from './PreguntaGroupedOperador';\n\nfunction Pregunta(props) {\n\n    const pregunta = props.objPregunta;\n\n    const [state, setState] = useState({\n        estado: pregunta.status,\n        resultado: pregunta.lastValue,\n        filename: '',\n        rol: '',\n        groupedResultado: [...Array(pregunta.questions.length).keys()]\n    })\n\n    const validarBtnClicked = () => {\n        if( state.resultado ){\n            setState({ ...state, estado: \"VALIDADA\" });\n            var revisiones = pregunta.revisiones;\n            var idUltimaRevision = '';\n            var fechaUltimaRevision = ''\n            revisiones.forEach((revision) => {\n                if (idUltimaRevision === '') {\n                    idUltimaRevision = revision._id;\n                    fechaUltimaRevision = revision.observacion.created;\n                } else {\n                    var f1 = new Date(fechaUltimaRevision);\n                    var f2 = new Date(revision.observacion.created);\n                    if (f2 > f1) {\n                        idUltimaRevision = revision._id;\n                        fechaUltimaRevision = revision.observacion.created;\n                    }\n                }\n            })\n            let configFile = {\n                headers: {\n                    Authorization: `Bearer ` + localStorage.getItem('token'),\n                    Accept: 'application/form-data'\n                }\n            }\n            var data = {\n                idPregunta: pregunta._id,\n                idRevision: idUltimaRevision,\n                revision: {\n                    respuestaValidada: {\n                        usuario: localStorage.getItem('username'),\n                        value: state.resultado\n                    }\n                }\n            }\n            if (pregunta.type === 'FILE') {\n                const form = new FormData();\n                form.append('files', state.resultado, state.resultado.name);\n                axios.post(`https://obs-pyme-validacion-back.herokuapp.com/api/upload`, form, configFile)\n                    .then(res => {\n                        const config = {\n                            headers: {\n                                Authorization: `Bearer ` + localStorage.getItem('token')\n                            }\n                        }\n                        data = {\n                            idPregunta: pregunta._id,\n                            idRevision: idUltimaRevision,\n                            revision: {\n                                respuestaValidada: {\n                                    usuario: localStorage.getItem('username'),\n                                    value: res.data.files[0].url\n                                }\n                            }\n                        }\n                        axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/pregunta/revision`, data, config)\n                            .then(response => {\n                                console.log(response)\n                            })\n                            .catch(error => { console.log(error) })\n                    })\n                    .catch(err => { \n                        console.log(err)\n                        alert(\"Ha ocurrido un error, favor de intentar nuevamente...\")\n                     })\n            } else {\n                const config = {\n                    headers: {\n                        Authorization: `Bearer ` + localStorage.getItem('token')\n                    }\n                }\n                axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/pregunta/revision`, data, config)\n                    .then(response => {\n                        console.log(response)\n                    })\n                    .catch(error => { console.log(error) })\n            }\n        }else{\n            alert('No se carg√≥ ningun archivo para validar...');\n        }\n\n    }\n\n    useEffect(() => {\n        const tokenData = decodeToken(localStorage.getItem('token'));\n        const rol = tokenData.role;\n        setState({ ...state, rol: rol })\n    }, [])\n\n    const onChangeHandler = (event) => {\n        setState({ ...state, resultado: event.target.files[0] })\n    }\n\n    const getStickerByStatus = () => {\n        switch (state.estado) {\n            case \"APROBADA\":\n                return <>\n                    <img className=\"pregunta__hourglass\" src={checksolid} alt=\"hourglass.svg\" />\n                          Aprobado\n                </>\n            case \"REVISION\":\n                return <>\n                    <img className=\"pregunta__hourglass\" src={hourglass} alt=\"hourglass.svg\" />\n                           En revisi√≥n\n                </>\n            case \"VALIDADA\":\n                return <>\n                    <img className=\"pregunta__hourglass\" src={hourglass} alt=\"hourglass.svg\" />\n                           Validada\n                </>\n            default:\n                return null;\n        }\n    }\n\n    const getResultByType = () => {\n        switch (pregunta.type) {\n            case \"CHOICE\":\n                return (\n                    <Form.Group className=\"pregunta__formGroupContainer\">\n                        {\n                            pregunta.options.map((resultado, index) => {\n                                return <Form.Check\n                                    key={index}\n                                    type=\"checkbox\"\n                                    label={resultado}\n                                    name=\"choiceRadio\"\n                                    id={index + 1}\n                                    defaultChecked={parseInt(pregunta.value) - 1 === index}\n                                    disabled\n                                    className=\"product__choiceItem\"\n                                />\n                            })\n                        }\n                    </Form.Group>\n                )\n            case \"NUMBER\":\n                return (\n                    // <div className=\"pregunta__respuestaContainer\">\n                    <input className=\"pregunta__respuestaContainer\" value={pregunta.value} disabled />\n                    // {/* </div> */}\n                )\n            case \"SELECT\":\n                return (\n                    <Form.Group className=\"pregunta__formGroupContainer\">\n                        <Form.Control className=\"pregunta__desplegableItem\" as=\"select\" defaultValue={pregunta.options[parseInt(pregunta.value) - 1]} disabled>\n                            {\n                                pregunta.options.map((resultado, index) => {\n                                    return <option key={index + 1}>{resultado}</option>\n                                })\n                            }\n                        </Form.Control>\n                    </Form.Group>\n                )\n            case \"FILE\":\n                return (\n                    <div className=\"pregunta__inputRespuestaContainer\" style={{ marginLeft: '0px' }}>\n                        <a href={pregunta.value}>Archivo</a>\n                    </div>\n                )\n            case \"GROUPED\":\n                return (\n                    <div className=\"pregunta__groupedContainer\" style={{ marginLeft: '0px' }}>\n                        {pregunta.questions.map((pregunta, index) => {\n                            if (pregunta.status === \"REVISION\") {\n\n                                return <PreguntaGroupedOperador\n                                    key={pregunta._id}\n                                    numId={index}\n                                    objPregunta={pregunta}\n                                    idPreguntaPadre={props.numId+1}\n                                />\n                            }\n                            return null\n                        })}\n                    </div>\n                )\n            default:\n                // case \"text\" or other\n                return (\n                    <textarea className=\"pregunta__respuestaContainer\" value={`${pregunta.value}`} disabled />\n                )\n        }\n\n    }\n\n    const getEditableResultByType = () => {\n        switch (pregunta.type) {\n            case \"CHOICE\":\n                return (\n                    <Form.Group className=\"pregunta__formGroupContainer\">\n                        {\n                            pregunta.options.map((resultado, index) => {\n                                return <Form.Check\n                                    key={index + 1}\n                                    type=\"radio\"\n                                    label={resultado}\n                                    // defaultChecked={ state.resultado ? parseInt(state.resultado)-1 === index : null }\n                                    name=\"choiceRadio\"\n                                    id={index + 1}\n                                    className=\"product__choiceItem\"\n                                    value={index + 1}\n                                    onChange={(event) => setState({ ...state, resultado: event.target.value })}\n                                />\n                            })\n                        }\n                    </Form.Group>\n                )\n            case \"NUMBER\":\n                return (\n                    <input className=\"pregunta__inputRespuestaContainer\"\n                        type=\"number\"\n                        onChange={(event) => setState({ ...state, resultado: event.target.value })} />\n                )\n            case \"SELECT\":\n                return (\n                    <Form.Group className=\"pregunta__formGroupContainer\">\n                        <Form.Control className=\"pregunta__desplegableItem\" as=\"select\" onChange={(event) => setState({ ...state, resultado: event.target.value })} >\n                            <option>Seleccionar</option>\n                            {\n                                pregunta.options.map((resultado, index) => {\n                                    return <option key={index + 1} value={index + 1}>{resultado}</option>\n                                })\n                            }\n                        </Form.Control>\n                    </Form.Group>\n                )\n            case \"FILE\":\n                return (\n                    <input className=\"pregunta__inputRespuestaContainer\" type=\"file\" name=\"archivo\" onChange={(event) => onChangeHandler(event)} />\n                )\n            case \"GROUPED\":\n                return (\n                    <div className=\"pregunta__groupedContainer\" style={{ marginLeft: '0px' }}>\n                        {/* {pregunta.questions.map((pregunta, index) => {\n                            if (pregunta.status === \"REVISION\") {\n\n                                return <PreguntaGroupedOperador\n                                    key={pregunta._id}\n                                    numId={index}\n                                    objPregunta={pregunta}\n                                />\n                            }\n                            return null\n                        })} */}\n                    </div>\n                )\n            default:\n                // case \"text\" or other\n                return (\n                    <textarea style={{ marginLeft: '10px' }} className=\"pregunta__respuestaContainer\" onChange={(event) => setState({ ...state, resultado: event.target.value })} />\n                )\n        }\n    }\n\n    const groupedResultadoChanged = (event, index) => {\n        const resultList = state.groupedResultado;\n        resultList[index] = event.target.value\n        setState({ ...state, groupedResultado: resultList })\n    }\n\n    return (\n        <>\n            <div className=\"pregunta\">\n                <div className=\"pregunta__header\">\n                    <p className=\"pregunta__numero\">Pregunta {props.numId + 1} {pregunta.mandatory ? \"(*)\" : null}</p>\n                    <p className=\"pregunta__sticker\">\n                        {\n                            pregunta.type !== \"GROUPED\" ?\n                            getStickerByStatus()\n                            : null\n                        }\n                    </p>\n                </div>\n                <div className=\"pregunta__descripcionContainer\">\n                    <p className=\"pregunta__descripcion\">{pregunta.title}</p>\n                </div>\n                {\n                    pregunta.type !== \"GROUPED\" ?\n                    <>\n                    <p className=\"pregunta__respuesta\">Respuesta</p>\n                    <p className=\"pregunta__respuesta\">Respuesta Validada</p>\n                    </>\n                    : <br/>\n                }\n                <div className=\"pregunta__respuestaGeneral\">\n                    {getResultByType()}\n                    {getEditableResultByType()}\n                </div>\n                {\n                    pregunta.type !== \"GROUPED\" ?\n                    <div className=\"pregunta__btnSectionEnRevision\">\n                        <Drawer pregunta={pregunta} rol={state.rol} />\n                        <button className=\"pregunta__btnValidar\" onClick={validarBtnClicked} >Validar</button>\n                    </div>\n                    : null\n                }\n            </div>\n        </>\n    )\n\n}\n\nexport default Pregunta;","import React, { Component } from 'react';\r\nimport './NavCuestionario.css';\r\nimport chevron from './images/chevron-left-solid.svg';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ModalEjemplo } from './Modal';\r\nimport { Button } from 'react-bootstrap';\r\nimport PreguntaSupervisor from '../Components/PreguntaSupervisor';\r\nimport PreguntaOperador from '../Components/PreguntaOperador';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass NavCuestionario extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      addModalShow : false,\r\n      modalType: \"\",\r\n      encuestaEnviableParaRevision: true,\r\n      existePreguntaARevisar: false,\r\n      encuestaEnviableParaAprobar: true,\r\n      encuestaEnviableParaValidar: true,\r\n      statusPreguntas: [],\r\n      rol: ''\r\n    }\r\n  }\r\n\r\n\r\n  async fetchData() {\r\n    let config = {\r\n      headers: {\r\n        Authorization: `Bearer `+localStorage.getItem('token'),\r\n      }\r\n    }\r\n    const idEncuesta = this.props.location.state.idEncuesta;\r\n    var response = await axios.get(`https://obs-pyme-validacion-back.herokuapp.com/api/encuesta/${idEncuesta}`, config);\r\n    const encuestas = response.data;\r\n    this.setState({...this.state, objEncuesta:encuestas[0]});\r\n     axios.get(`https://obs-pyme-validacion-back.herokuapp.com/api/usuario`, config)\r\n      .then( res => { \r\n          const rol = res.data.rol;\r\n          this.setState({...this.state, rol: rol});\r\n        })\r\n      .catch( err => { console.log(err) } )\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchData()\r\n  }\r\n\r\n  addModalClose =() => this.setState({...this.state, addModalShow : false});\r\n\r\n  revisarBtnClicked = () => {\r\n    this.fetchData().then(()=>{\r\n      if (this.state.objEncuesta) {\r\n        const encuesta = this.state.objEncuesta;\r\n        this.setState({...this.state, encuestaEnviableParaRevision: true});\r\n        this.setState({...this.state, existePreguntaARevisar: false});\r\n        encuesta.sections.forEach(section => {\r\n              section.questions.forEach((question) => {                  \r\n                  if (question.status === 'PENDIENTE' && question.type !== \"GROUPED\"){\r\n                      this.setState({...this.state, encuestaEnviableParaRevision: false});\r\n                  }\r\n                  if (question.status === 'REVISION' && question.type !== \"GROUPED\"){\r\n                    this.setState({...this.state, existePreguntaARevisar: true})\r\n                  }\r\n                  if (question.type === \"GROUPED\") {\r\n                      question.questions.forEach( childQuestion => {\r\n                        if (childQuestion.status === 'PENDIENTE'){\r\n                          this.setState({...this.state, encuestaEnviableParaRevision: false});\r\n                        }\r\n                        if (childQuestion.status === 'REVISION'){\r\n                          this.setState({...this.state, existePreguntaARevisar: true})\r\n                        }\r\n                      })\r\n                  }\r\n              });\r\n        });\r\n      }\r\n      if (this.state.encuestaEnviableParaRevision && this.state.existePreguntaARevisar) {\r\n          if(window.confirm('Desea enviar esta encuesta a revisar?')){\r\n            let config = {\r\n              headers: {\r\n                Authorization: `Bearer `+localStorage.getItem('token'),\r\n              }\r\n            }\r\n              const data = { status: 'REVISION' }\r\n              axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/encuesta/${this.state.objEncuesta._id}/status`, data, config)\r\n                  .then( response => { \r\n                      this.props.history.push('/home');\r\n                    })\r\n                  .catch( error => { console.log(error) })\r\n          }\r\n      }else{\r\n          alert('Existen preguntas que todavia estan PENDIENTES o directamente no hay preguntas para REVISAR. \\nPor favor aprobarlas o mandarlas a revisi√≥n antes de enviar esta encuesta a revisi√≥n.')\r\n      }\r\n  })\r\n}\r\n\r\n  aprobarBtnClicked = () => {\r\n      this.fetchData().then(()=>{\r\n        if (this.state.objEncuesta) {\r\n          const encuesta = this.state.objEncuesta;\r\n          this.setState({...this.state, encuestaEnviableParaAprobar: true});\r\n          encuesta.sections.forEach(section => {\r\n                section.questions.forEach((question) => {                  \r\n                    if (question.status !== 'APROBADA' && question.type !== \"GROUPED\"){\r\n                        this.setState({...this.state, encuestaEnviableParaAprobar: false});\r\n                    }\r\n                    if (question.type === \"GROUPED\"){\r\n                        question.questions.forEach( childQuestion => {\r\n                          if (childQuestion.status !== \"APROBADA\"){\r\n                             this.setState({...this.state, encuestaEnviableParaAprobar: false});\r\n                          } \r\n                        })\r\n                    }\r\n                });\r\n          });\r\n        }\r\n        if (this.state.encuestaEnviableParaAprobar) {\r\n          // FALTA PROBAR\r\n          if(window.confirm('Desea aprobar esta encuesta?')){\r\n            let config = {\r\n              headers: {\r\n                Authorization: `Bearer `+localStorage.getItem('token'),\r\n              }\r\n            }\r\n              const data = { status: 'APROBADA' }\r\n              axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/encuesta/${this.state.objEncuesta._id}/status`, data, config)\r\n                  .then( response => { \r\n                      this.props.history.push('/home');\r\n                    } )\r\n                  .catch( error => { console.log(error) })\r\n          }\r\n        }else{\r\n            alert('Existen preguntas que todavia no estan APROBADAS. Por favor aprobarlas antes de aprobar esta encuesta.')\r\n        }\r\n        })\r\n  }\r\n\r\n\r\n  rechazarBtnClicked = () => {\r\n      if(window.confirm('Desea rechazar esta encuesta?')){\r\n        const data = { status: 'RECHAZADA' }\r\n        let config = {\r\n          headers: {\r\n            Authorization: `Bearer `+localStorage.getItem('token'),\r\n          }\r\n        }\r\n        axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/encuesta/${this.state.objEncuesta._id}/status`, data, config)\r\n            .then( response => { \r\n                this.props.history.push('/home');\r\n               })\r\n            .catch( error => { console.log(error) })\r\n      }\r\n  }\r\n\r\n  validarBtnClicked = ()=> {\r\n    this.fetchData().then(()=>{\r\n      if (this.state.objEncuesta) {\r\n        const encuesta = this.state.objEncuesta;\r\n        this.setState({...this.state, encuestaEnviableParaValidar: true});\r\n        encuesta.sections.forEach(section => {\r\n              section.questions.forEach((question) => {                  \r\n                  if (question.status === 'REVISION' ){\r\n                      this.setState({...this.state, encuestaEnviableParaValidar: false});\r\n                  }\r\n              });\r\n        });\r\n      }\r\n      if (this.state.encuestaEnviableParaValidar) {\r\n        // FALTA PROBAR\r\n        if(window.confirm('Desea terminar de validar esta encuesta?')){\r\n          let config = {\r\n            headers: {\r\n              Authorization: `Bearer `+localStorage.getItem('token'),\r\n            }\r\n          }\r\n            const data = { status: 'VALIDADA' }\r\n            axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/encuesta/${this.state.objEncuesta._id}/status`, data, config)\r\n                .then( response => { \r\n                    this.props.history.push('/home');\r\n                  } )\r\n                .catch( error => { console.log(error) })\r\n        }\r\n      }else{\r\n          alert('Existen preguntas que todavia estan en REVISION. Por favor validarlas antes de aprobar esta encuesta.')\r\n      }\r\n      })\r\n  }\r\n\r\n  encuestaNoAprobable = () => {\r\n     this.setState({ ...this.state, encuestaEnviableParaAprobar:false })\r\n  }\r\n\r\n    render(){\r\n      return (\r\n        <>\r\n        {\r\n          this.state.objEncuesta ? \r\n            <div className=\"nav\">\r\n                <Link className=\"nav_button\"\r\n                      to=\"/home\">\r\n                        <img\r\n                        alt=\"<\"\r\n                        src={chevron}\r\n                        className=\"nav_image\"\r\n                  /> \r\n                    {  this.state.objEncuesta.name ? \" \"+ this.state.objEncuesta.company.name : ' Loading...'}\r\n                  </Link>\r\n                <p/>\r\n                <li><strong>ID:</strong> { this.state.objEncuesta._id.slice( this.state.objEncuesta._id.length - 6) }</li>\r\n                <li><strong>Encuesta:</strong>  {  this.state.objEncuesta.name } </li>\r\n                <li><strong>Fecha creada:</strong>  { this.state.objEncuesta.created.split(\"T\",1) }</li>\r\n                <li><strong> Fecha actualizada:</strong>  { this.state.objEncuesta.modified.split(\"T\",1) }</li>\r\n                <hr/>\r\n            </div> : null\r\n        }\r\n        {\r\n             this.state.objEncuesta ?  this.state.objEncuesta.sections.map((section)=>{\r\n                return( \r\n                    <>\r\n                      <br/>\r\n                      <p style={{fontSize:\"18px\", marginLeft:\"16px\", color:\"#42536E\"}}><strong>{section.title}</strong></p>\r\n                      <p style={{fontSize:\"18px\", marginLeft:\"16px\", color:\"#42536E\"}}><strong>{section.description}</strong></p>\r\n                      <br/>\r\n                      {\r\n                        this.state.rol === 'SUPERVISOR' ? \r\n                        section.questions.map((pregunta, index) => {\r\n                            return <PreguntaSupervisor\r\n                                      key={pregunta._id}\r\n                                      numId={ index }\r\n                                      objPregunta={pregunta}\r\n                                      userRol={this.state.rol}\r\n                                   />\r\n                        }) \r\n                        :null\r\n                      }\r\n                      {\r\n                        this.state.rol === 'OPERADOR' ? \r\n                          section.questions.map((pregunta, index) => {\r\n                            if (pregunta.status === \"REVISION\") {\r\n                              \r\n                                return <PreguntaOperador\r\n                                key={pregunta._id}\r\n                                numId={ index }\r\n                                objPregunta={pregunta}\r\n                                userRol={this.state.rol}\r\n                          />\r\n                            }\r\n                            return null\r\n                        }) : null\r\n                      }\r\n                      <hr/>\r\n                    </>\r\n                )\r\n            }) : null\r\n        }\r\n        <div className=\"nav_accept_button\">\r\n        {  (this.state.rol === \"SUPERVISOR\" || this.state.rol === \"ADMINISTRADOR\") && this.state.objEncuesta ?  \r\n          <> \r\n              <Button \r\n                  className=\"nav_rechazarBtn\"\r\n                  onClick={ this.rechazarBtnClicked }\r\n                  >Rechazar Encuesta\r\n              </Button>\r\n              <Button \r\n                  className=\"nav__revisarBtn\"\r\n                  onClick={ this.revisarBtnClicked }\r\n                  >Enviar para revisar\r\n              </Button>\r\n              <Button \r\n                className=\"nav_aprobarBtn\"\r\n                onClick={ this.aprobarBtnClicked }\r\n                >Aprobar Encuesta\r\n              </Button> \r\n              <ModalEjemplo\r\n                  show = { this.state.addModalShow}\r\n                  onHide = {this.addModalClose}\r\n                  modalType = { this.state.modalType}\r\n              />\r\n          </> : null \r\n        }\r\n        {\r\n          this.state.rol === \"OPERADOR\" ? \r\n          <Button \r\n          className=\"nav_enviarValidacionBtn\"\r\n          onClick={ this.validarBtnClicked }\r\n          >Encuesta Validada\r\n          </Button> : null\r\n        }\r\n        </div>\r\n        </>\r\n    );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(NavCuestionario)\r\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Link } from 'react-router-dom';\nimport eye from './images/eye-solid.svg';\nimport { decodeToken } from \"react-jwt\";\n\nconst columns = [\n  { id: 'id', label: 'ID', minWidth: 20 },\n  { id: 'name', label: 'Encuesta', minWidth: 250 },\n  {\n    id: 'empresa',\n    label: 'Empresa',\n    minWidth: 100,\n    align: 'center',\n  },\n  {\n    id: 'estado',\n    label: 'Estado',\n    minWidth: 100,\n    align: 'center',\n  },\n  {\n    id: 'creado',\n    label: 'Creado',\n    minWidth: 100,\n    align: 'center',\n  },\n  {\n    id: 'modificado',\n    label: 'Modificado',\n    minWidth: 100,\n    align: 'center',\n  },\n  {\n    id: 'sections',\n    label: 'Acci√≥n',\n    minWidth: 100,\n    align: 'center',\n  },\n];\n\nfunction createData(id, name, empresa, estado, creado, modificado, sections) {\n  return { id, name, empresa, estado, creado, modificado, sections};\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [searchText, setSearchText] = useState('');\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n// https://obs-pyme-validacion-back.herokuapp.com/api/encuesta\n\nconst [data, setData] = useState({rol:''});\nconst [rows, setRows] = useState([]);\n\nuseEffect(() => {\n  async function fetchData() {\n    let config = {\n      headers: {\n        Authorization: `Bearer `+localStorage.getItem('token'),\n      }\n    }\n    const response = await axios.get(`https://obs-pyme-validacion-back.herokuapp.com/api/encuesta`, config);\n    const encuestas = response.data;\n    const rows_list = []\n    encuestas.forEach(encuesta => {\n        var date = encuesta.modified.split(\"T\", 1).toString();\n        const modifiedFullDate = date\n        date = encuesta.created.split(\"T\", 1).toString();\n        const createdFullDate = date\n        const id = encuesta._id.slice(encuesta._id.length - 6)\n        rows_list.push(createData(id, encuesta.name, encuesta.company.name, encuesta.status, createdFullDate, modifiedFullDate, encuesta._id));\n    })\n    setRows(rows_list);\n    setData(encuestas);\n  }\n  fetchData();\n}, []);\n\nconst tokenData = decodeToken(localStorage.getItem('token'));\nconst rol = tokenData.role;\n\n  return (\n    <div className=\"table\">\n        <p className=\"table-title\">Listado de Encuestas</p>\n        <div style={{display:'flex', marginBottom:'30px'}}>\n            <input \n                type=\"text\" \n                placeholder=\"Buscar encuesta\" \n                style={{padding:'8px 10px', \n                borderRadius:'5px 0 0 5px', outline:'none'}} \n                value={searchText}\n                onChange={(event)=>setSearchText(event.target.value.toLowerCase())}\n              />\n            {/* <button style={{height:'37px', border:'none', backgroundColor:'#42536E', color:'white', padding:'0 20px', borderRadius:'0 5px 5px 0'}}>Buscar</button> */}\n        </div>\n        <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n                <TableRow>\n                {columns.map((column) => (\n                    <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                    >\n                    {column.label}\n                    </TableCell>\n                ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  if ( row['name'].toLowerCase().includes(searchText) || row['id'].toLowerCase().includes(searchText) || \n                       row['empresa'].toLowerCase().includes(searchText) || row['estado'].toLowerCase().includes(searchText) ||\n                       row['creado'].toLowerCase().includes(searchText) || row['modificado'].toLowerCase().includes(searchText) ){\n                         if ( rol !== \"OPERADOR\" ){\n                          return (\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                            {columns.map((column) => {\n                                const value = row[column.id];\n                                if (column.id !== 'sections') {\n                                    return (            \n                                        <TableCell key={column.id} align={column.align}>\n                                            {value}\n                                        </TableCell>\n                                        );\n                                }else{\n                                    return (\n                                        <TableCell key={column.id} align={column.align}>\n                                            <Link \n                                                to={{pathname:\"/detalle\",\n                                                     state:{ idEncuesta:value }\n                                                }} \n                                                style={{display:'flex', \n                                                        alignItems:'center',\n                                                        textDecoration:'none',\n                                                        marginLeft:'20px'}}\n                                                >  \n                                                    <img className=\"detail-eye\" src={eye} alt=\"eye-solid.svg\"/>\n                                                    <p className=\"verDetalle\">Ver detalle</p>\n                                            </Link>\n                                        </TableCell>\n                                    );\n                                }\n                            })}\n                            </TableRow>\n                          );\n                         }else{\n                            if ( row['estado'] === \"REVISION\" ){\n                              return (              \n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                                {columns.map((column) => {\n                                    const value = row[column.id];\n                                    if (column.id !== 'sections') {\n                                        return (            \n                                            <TableCell key={column.id} align={column.align}>\n                                                {value}\n                                            </TableCell>\n                                            );\n                                    }else{\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                                <Link \n                                                    to={{pathname:\"/detalle\",\n                                                         state:{ idEncuesta:value }\n                                                    }} \n                                                    style={{display:'flex', \n                                                            alignItems:'center',\n                                                            textDecoration:'none',\n                                                            marginLeft:'20px'}}\n                                                    >  \n                                                        <img className=\"detail-eye\" src={eye} alt=\"eye-solid.svg\"/>\n                                                        <p className=\"verDetalle\">Ver detalle</p>\n                                                </Link>\n                                            </TableCell>\n                                        );\n                                    }\n                                })}\n                                </TableRow>\n                              );\n                            }else{\n                                return null\n                            }\n                \n                         }\n                  }\n                  return null\n                })\n              }\n            </TableBody>\n            </Table>\n        </TableContainer>\n        <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        </Paper>\n    </div>\n  );\n}","import React from 'react';\nimport isoFOP from './images/isoFOP.svg';\nimport './Sidebar.css';\nimport singout from './images/sign-out.svg';\nimport listSolid from './images/listSolid.svg';\nimport userSolid from './images/user-solid.svg';\nimport editSolid from './images/edit-solid.png';\nimport { decodeToken } from \"react-jwt\";\n\nimport { Link } from 'react-router-dom';\n\nfunction Sidebar (props) {\n\n    const cleanLocalStorage = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n    }\n\n    const token = localStorage.getItem('token');\n    const tokenData = decodeToken(token);\n\n    return (\n        <>\n               <div className=\"sidebar-body\">\n\n                    <div className=\"content\">\n                        <div style={{'display': ['flex'], alignItems:'flex-end'}}>\n                            <img className=\"sidebar-ISO\" src={isoFOP} alt=\"IsoFOP.svg\"/>\n                            <p  className=\"sidebar-FOP\">Fundaci√≥n Observatorio PYME </p>\n                        </div>\n                    <div>\n                        {\n                            tokenData.role !== \"ADMINISTRADOR\" ?\n                            <Link to=\"/home\" className=\"location-text\">\n                            <img className=\"solid.list\" src={listSolid} alt=\"listSolid.svg\"/>\n                            <p className=\"sidebar-text\"href=\"#Encuestas\">Encuestas</p>\n                            </Link>\n                            : null\n                        }\n                        {   \n                            tokenData.role === \"ADMINISTRADOR\" ? \n                            <Link to=\"/usuarios\" className=\"location-text\" style={{marginTop:'50px'}} >\n                                <img className=\"solid.list\" src={userSolid} alt=\"listSolid.svg\"/>\n                                <p className=\"sidebar-text\"href=\"#Encuestas\">Usuarios</p>\n                            </Link> \n                            : null\n                        }\n                            <Link to=\"/perfil\" className=\"location-text\" style={{marginTop:'20px'}} >\n                                <img className=\"solidIcon\" src={editSolid} alt=\"listSolid.svg\"/>\n                                <p className=\"sidebar-text\"href=\"#Encuestas\">Editar Perfil</p>\n                            </Link> \n                    </div>\n                    </div>\n                    <div>\n                            <Link to=\"/login\" onClick={ cleanLocalStorage } className=\"signOutBtn\">\n                                <img src={singout} alt=\"IsoFOP.svg\"/>\n                                <p className=\"sidebar-logoff\" href=\"#LogOut\">Cerrar Sesi√≥n</p>\n                            </Link>\n                    </div>\n\n                </div>\n        </>\n    );\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Link, useHistory } from 'react-router-dom';\nimport trashAltRegular from './images/trash-alt-regular.svg'\nimport editRegular from './images/edit-regular.svg';\nimport './Usuarios.css';\nimport Button from '@material-ui/core/Button';\n\nconst columns = [\n  { id: 'id', label: 'ID', minWidth: 20 },\n  { id: 'name', label: 'Nombre del Empleado', minWidth: 250 },\n  {\n    id: 'usuario',\n    label: 'Usuario',\n    minWidth: 100,\n    align: 'center',\n  },\n  {\n    id: 'password',\n    label: 'Contrase√±a',\n    minWidth: 100,\n    align: 'center',\n  },\n  {\n    id: 'rol',\n    label: 'Rol',\n    minWidth: 100,\n    align: 'center',\n  },\n  {\n    id: 'accion',\n    label: 'Acci√≥n',\n    minWidth: 100,\n    align: 'center',\n  }\n];\n\nfunction createData(id, name, usuario, password, rol, action) {\n  return { id, name, usuario, password, rol, action };\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  }\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [searchText, setSearchText] = useState('');\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\nconst [rows, setRows] = useState([]);\n\nconst history = useHistory();\n\nuseEffect(() => {\n  async function fetchData() {\n    let config = {\n      headers: {\n        Authorization: `Bearer `+localStorage.getItem('token'),\n      }\n    }\n    const response = await axios.get(`https://obs-pyme-validacion-back.herokuapp.com/api/usuario/list`, config);\n    const usuarios = response.data;\n    const rows_list = []\n    usuarios.forEach(usuario => {\n      rows_list.push(createData(usuario._id, usuario.nombre, usuario.username, usuario.contrase√±a, usuario.rol, usuario.username));\n    })\n    setRows(rows_list);\n  }\n  fetchData();\n}, []);\n\nconst deleteBtnClicked = (event) => {\n    const id = event.target.alt;\n    let config = {\n      headers: {\n        Authorization: `Bearer `+localStorage.getItem('token'),\n      }\n    }\n    console.log(id)\n    axios.delete(`https://obs-pyme-validacion-back.herokuapp.com/api/usuario/${id}`, config)\n      .then(res => {\n          const newRows = rows.filter(function( obj ) {\n            return obj.id !== id;\n        });\n        setRows(newRows);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n}\n\nconst modificarBtnClicked = (event) => {\n  event.preventDefault();\n  const id = event.target.alt;\n  history.push({pathname:'/altaUsuario', state:{tipo:'Modificar', username:id}})\n}\n\nlet currentId = '';\n\n  return (\n    <div className=\"table\">\n        <p className=\"table-title\">Listado de Usuarios</p>\n        <div style={{display:'flex', marginBottom:'30px'}}>\n            <input \n                type=\"text\" \n                placeholder=\"Buscar usuario\" \n                style={{padding:'8px 10px', borderRadius:'5px 0 0 5px', outline:'none'}}\n                value={searchText}\n                onChange={(event)=>setSearchText(event.target.value.toLowerCase())}\n            />\n            {/* <button style={{height:'37px', border:'none', backgroundColor:'#42536E', color:'white', padding:'0 20px', borderRadius:'0 5px 5px 0'}}>Buscar</button> */}\n        </div>\n        <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n                <TableRow>\n                {columns.map((column) => (\n                    <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                    >\n                    {column.label}\n                    </TableCell>\n                ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    if ( row['id'].toLowerCase().includes(searchText) || row['name'].toLowerCase().includes(searchText) || \n                    row['usuario'].toLowerCase().includes(searchText) || row['rol'].toLowerCase().includes(searchText) ){\n                        return (\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                            {columns.map((column) => {\n                                const value = row[column.id];\n                                if (column.id !== 'accion') {\n                                    if (column.id === 'password'){\n                                      \n                                      return (\n                                        <TableCell key={column.id} align={column.align}>\n                                          { \"*\".repeat(value.length) }\n                                      </TableCell>\n                                      )\n                                    }\n                                    if (column.id === 'id'){\n                                        currentId = value;\n                                        return (\n                                          <TableCell key={column.id} align={column.align}>\n                                            {value.slice(value.length - 6)}\n                                          </TableCell>\n                                        )\n                                    }\n                                    if (column.id === 'usuario'){\n                                      return (\n                                        <TableCell key={column.id} align={column.align}>\n                                          {value}\n                                        </TableCell>\n                                      )\n                                  }\n                                    return (            \n                                        <TableCell key={column.id} align={column.align}>\n                                            {value}\n                                        </TableCell>\n                                        );\n                                }else{\n                                    return (\n                                        <TableCell key={column.id} align={column.align} style={{display:'flex', alignItems:'center', justifyContent:'center', padding:'15px 0px'}}>\n                                            <Link style={{display:'flex', alignItems:'center', textDecoration:'none'}} onClick={(event)=>modificarBtnClicked(event)}> \n                                                <img className=\"detail-eye\" src={editRegular} alt={currentId}/>\n                                            </Link>\n                                            <Link style={{display:'flex', alignItems:'center', textDecoration:'none', marginLeft:'10px'}}\n                                                    onClick={(event)=>deleteBtnClicked(event)}>  \n                                                <img className=\"detail-eye\" src={trashAltRegular} alt={currentId} />\n                                            </Link>\n                                        </TableCell>\n                                    );\n                                }\n                            })}\n                            </TableRow>\n                        );\n                    }\n                    return null\n                })}\n            </TableBody>\n            </Table>\n        </TableContainer>\n        <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        </Paper>\n        <div style={{width:'100%', display:'flex', justifyContent:'flex-end', marginTop:'20px'}}>\n                <Link to={{pathname:'/altaUsuario', state:{tipo:'Alta'}}} style={{textDecoration:'none'}}>\n                    <Button className=\"buttonAlta\">Alta Usuario</Button>\n                </Link>\n        </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport './altaUsuario.css'\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { decodeToken } from \"react-jwt\";\n\nexport default function AltaUsuario(props) {\n\n    const history = useHistory();\n\n    const [state, setState] = useState({\n        name: '',\n        user: '',\n        password: '',\n        rol: '',\n        id: '',\n    });\n\n    const confirmarBtnClicked = () => {\n        switch (history.location.state.tipo) {\n            case 'Alta':\n                if (checkinput()) {\n                    const roles = [\"\", \"SUPERVISOR\", \"OPERADOR\", \"ADMINISTRADOR\"]\n                    const data = {\n                        username: state.user,\n                        contrase√±a: state.password,\n                        nombre: state.name,\n                        rol: roles[state.rol]\n                  }\n                  let config = {\n                    headers: {\n                      Authorization: `Bearer `+localStorage.getItem('token'),\n                    }\n                  }\n                  axios.post(`https://obs-pyme-validacion-back.herokuapp.com/api/usuario`, data, config)\n                        .then( (response) => {\n                                    alert('Usuario agregado!');\n                                    history.push(\"/usuarios\")\n                                })\n                        .catch( (error) => console.log(error))\n                }\n                break;\n            case 'Modificar': \n                if (checkinput()){\n                    const data = {\n                        username: state.user,\n                        contrase√±a: state.password,\n                    }\n                    let config = {\n                        headers: {\n                          Authorization: `Bearer `+localStorage.getItem('token'),\n                        }\n                      }\n                axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/usuario/${state.id}`, data, config)\n                        .then( (response) => {\n                            console.log(response);\n                            alert('Contrase√±a actualizada!');\n                            history.push(\"/usuarios\");\n                        })\n                        .catch( (error) => console.log(error))\n                }\n                break;\n            default:\n                \n                break;\n        }\n    }\n\n    const cancelarBtnClicked = () => {\n            history.push(\"/usuarios\")\n    }\n\n    const checkinput = () => {\n        if (state.name !== '' && state.user !== '' && state.password !== '' && state.rol !== '') {\n            return true\n        }else {\n            alert('Verifique los datos ingresados...');\n            return false\n        }\n    }\n\n    useEffect(() => {\n        if (history.location.state.tipo === 'Modificar'){\n            const dataToken = decodeToken(localStorage.getItem('token'));\n            let config = {\n                headers: {\n                  Authorization: `Bearer `+localStorage.getItem('token'),\n                }\n              }\n            axios.get(`https://obs-pyme-validacion-back.herokuapp.com/api/usuario/${dataToken.userId}`, config)\n                        .then( (response) => {\n                                    const data = response.data;\n                                    const roles = [\"\", \"SUPERVISOR\", \"OPERADOR\", \"SUPERADMIN\"];\n                                    const indexRol = roles.indexOf(data.rol)\n                                    setState({...state, name:data.nombre, user:data.username, password:data.contrase√±a, rol:indexRol, id:data._id})\n                                })\n                        .catch( (error) => console.log(error))\n        }\n    },[])\n\n    return (\n        <div className=\"altaUsuario\">\n            <form className=\"loginForm\" onSubmit={confirmarBtnClicked}>\n                    <p><strong>{ history.location.state.tipo } Usuario</strong></p>\n                    <label htmlFor=\"email\">Nombre de Empleado</label>\n                    <input\n                        name=\"nombre\"\n                        type=\"text\"\n                        placeholder=\"Nombre\"\n                        value={state.name}\n                        onChange={(event)=>{setState({...state, name:event.target.value})}}\n                        required\n                        disabled={ history.location.state.tipo === 'Modificar' ? true : false }\n                    />\n                    <label style={{marginTop:'20px'}} htmlFor=\"email\">Usuario</label>\n                    <input\n                        name=\"usuario\"\n                        type=\"text\"\n                        placeholder=\"Usuario\"\n                        value={state.user}\n                        onChange={(event)=>{setState({...state, user:event.target.value})}}\n                        required\n                    />\n                    <label style={{marginTop:'20px'}} htmlFor=\"email\">Password</label>\n                    <input\n                        name=\"usuario\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={state.password}\n                        onChange={(event)=>{setState({...state, password:event.target.value})}}\n                        required\n                    />\n                    <label style={{marginTop:'20px'}} htmlFor=\"email\">Rol</label>\n                    <select style={{width:'100%', marginBottom:'10px'}} value={state.rol} onChange={(event)=>{setState({...state, rol:event.target.value})}} disabled={ history.location.state.tipo === 'Modificar' ? true : false }>\n                        <option>-</option>\n                        <option value={1}>Supervisor</option>\n                        <option value={2}>Operador</option>\n                        <option value={3}>Superadmin</option>\n                    </select>\n                        <Button onClick={confirmarBtnClicked} className=\"iniciarSesionBtn\">Confirmar</Button>\n\n                    <Link to=\"/usuarios\" onClick={cancelarBtnClicked} style={{textDecoration:'none'}}>\n                        <Button className=\"cancelarBtn\">Cancelar</Button>\n                    </Link>\n                </form>\n        </div>\n    )\n}\n\n","import React, { useState } from 'react'\nimport { Formik } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport axios from 'axios';\nimport \"./Login.css\";\nimport { decodeToken } from 'react-jwt';\n\nfunction Login() {\n\n    const [state, setState] = useState({\n        username: '',\n        password: ''\n    })\n\n    const iniciarSesionClicked = () => {\n        login(state.username, state.password);\n    }\n\n    const history = useHistory();\n\n    async function login(user, password) {\n        const data = {\n            username: user,\n            contrase√±a: password\n        }\n        let config = {\n            headers: {\n              Authorization: `Bearer `+localStorage.getItem('token'),\n            }\n          }\n        await axios.post(`https://obs-pyme-validacion-back.herokuapp.com/api/login`, data, config)\n            .then( response => { \n                localStorage.removeItem('username');\n                localStorage.removeItem('token');\n                localStorage.setItem('username', state.username);\n                const token = response.data.token;\n                localStorage.setItem('token', token);\n                const tokenData = decodeToken(token);\n                const rol = tokenData.role;\n                if (rol === \"ADMINISTRADOR\") {\n                    history.push('/usuarios')\n                }else {\n                    history.push('/home');\n                }\n            })\n            .catch( error => { \n                alert('Usuario o contrase√±a inv√°lido... Por favor, Reintente con otra combinaci√≥n')\n                console.log(error)\n             })\n    }\n\n    return (\n        <div>\n            <Formik\n                validationSchema={Yup.object().shape({\n                    email: Yup.string()\n                        .email(\"Ingrese un email valido.\")\n                        .required(\"Obligatorio\"),\n                    // password: Yup.string()\n                    //     .required(\"Obligatorio.\")\n                    //     .min(6, \"Su clave es muy corta. Necesita al menos 6 caracteres\")\n                })}\n\n            >\n                {props => {\n                    const {\n                        touched,\n                        errors,\n                        isSubmitting,\n                        handleBlur,\n                        handleSubmit\n                    } = props;\n                    return (\n                        <div className=\"pantallaLogin\">\n                        <form className=\"loginForm\" onSubmit={handleSubmit}>\n                            <img src={require(\"./images/fundacionObsPymeLogo.png\")} alt=\"logo\" className=\"logo\" />\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                name=\"user\"\n                                type=\"text\"\n                                placeholder=\"Ingrese su usuario\"\n                                value={state.username}\n                                onChange={(e)=>setState({...state, username:e.target.value})}\n                                onBlur={handleBlur}\n                                className={errors.email && touched.email && \"error\"}\n                            />\n                            {errors.email && touched.email && (\n                                <div className=\"input-feedback\">{errors.email}</div>\n                            )}\n                            <label style={{marginTop:'20px'}} htmlFor=\"email\">Password</label>\n                            <input\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Ingrese su clave\"\n                                value={state.password}\n                                onChange={(e)=>setState({...state, password:e.target.value})}\n                                onBlur={handleBlur}\n                                className={errors.password && touched.password && \"error\"}\n                            />\n                            {errors.password && touched.password && (\n                                <div className=\"input-feedback\">{errors.password}</div>\n                            )}\n                            <Link className=\"iniciarSesionBtn\" onClick={iniciarSesionClicked} style={{marginTop:'20px'}} type=\"submit\" disabled={isSubmitting}>\n                                Iniciar Sesion\n                            </Link>\n                            <br/><br/>\n                            <p style={{textAlign:'center'}}><strong>usuario: </strong>sup <strong>password: </strong>123</p>\n                        </form>\n                        </div>\n                    );\n                }}\n            </Formik>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { decodeToken } from 'react-jwt';\n\nfunction Perfil() {\n\n    const [state, setState] = useState({\n        name: '',\n        user: '',\n        password: '',\n        rol: '',\n        id: '',\n    });\n\n    const history = useHistory();\n     \n    useEffect(() => {\n            let config = {\n                headers: {\n                  Authorization: `Bearer `+localStorage.getItem('token'),\n                }\n              }\n            axios.get(`https://obs-pyme-validacion-back.herokuapp.com/api/usuario/`, config)\n                        .then( (response) => {\n                                    const data = response.data;\n                                    const roles = [\"\", \"SUPERVISOR\", \"OPERADOR\", \"SUPERADMIN\"];\n                                    const indexRol = roles.indexOf(data.rol)\n                                    setState({...state, name:data.nombre, user:data.username, password:data.contrase√±a, rol:indexRol, id:data._id})\n                                })\n                        .catch( (error) => console.log(error))\n    },[])\n\n    const confirmarBtnClicked = () => {\n        if (checkinput()){\n            const data = {\n                username: state.user,\n                contrase√±a: state.password,\n            }\n            let config = {\n                headers: {\n                  Authorization: `Bearer `+localStorage.getItem('token'),\n                }\n              }\n        axios.patch(`https://obs-pyme-validacion-back.herokuapp.com/api/usuario/${state.id}`, data, config)\n                .then( (response) => {\n                        const tokenData = decodeToken(localStorage.getItem('token'));\n                        const rol = tokenData.role\n                        if (rol === \"ADMINISTRADOR\"){\n                            history.push(\"/usuarios\")\n                        }else{\n                            history.push(\"/home\");\n                        }\n                })\n                .catch( (error) => console.log(error))\n        }\n    }\n\n    const checkinput = () => {\n        if (state.name !== '' && state.user !== '' && state.password !== '' && state.rol !== '') {\n            return true\n        }else {\n            alert('Verifique los datos ingresados...');\n            return false\n        }\n    }\n\n    const perfilCancelarBtnClicked = () => {\n        history.push(\"/home\");\n    }\n\n    return (\n        <div className=\"altaUsuario\">\n            <form className=\"loginForm\">\n                    <p><strong> Editar Mi Perfil</strong></p>\n                    <label htmlFor=\"email\">Nombre de Empleado</label>\n                    <input\n                        name=\"nombre\"\n                        type=\"text\"\n                        placeholder=\"Nombre\"\n                        value={state.name}\n                        onChange={(event)=>{setState({...state, name:event.target.value})}}\n                        required\n                        disabled\n                    />\n                    <label style={{marginTop:'20px'}} htmlFor=\"email\">Usuario</label>\n                    <input\n                        name=\"usuario\"\n                        type=\"text\"\n                        placeholder=\"Usuario\"\n                        value={state.user}\n                        onChange={(event)=>{setState({...state, user:event.target.value})}}\n                        required\n                        disabled\n                    />\n                    <label style={{marginTop:'20px'}} htmlFor=\"email\">Password</label>\n                    <input\n                        name=\"usuario\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={state.password}\n                        onChange={(event)=>{setState({...state, password:event.target.value})}}\n                        required\n                    />\n                    <label style={{marginTop:'20px'}} htmlFor=\"email\">Rol</label>\n                    <select style={{width:'100%', marginBottom:'10px'}} value={state.rol} onChange={(event)=>{setState({...state, rol:event.target.value})}} disabled>\n                        <option>-</option>\n                        <option value={1}>Supervisor</option>\n                        <option value={2}>Operador</option>\n                        <option value={3}>Superadmin</option>\n                    </select>\n                        <Button onClick={confirmarBtnClicked} className=\"iniciarSesionBtn\">Confirmar</Button>\n\n                    <Link onClick={perfilCancelarBtnClicked} style={{textDecoration:'none'}}>\n                        <Button className=\"cancelarBtn\">Cancelar</Button>\n                    </Link>\n                </form>\n        </div>\n    )\n}\n\nexport default Perfil;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { isExpired, decodeToken } from \"react-jwt\";\nimport NavCuestionario from './Components/NavCuestionario';\nimport Tabla from './Components/Tabla';\nimport Sidebar from './Components/Sidebar';\nimport Usuarios from './Components/Usuarios';\nimport AltaUsuario from './Components/altaUsuario';\nimport Login from './Components/login';\nimport Perfil from './Components/Perfil';\nimport './App.css';\n\nfunction App() {\n\n  const [state, setState] = useState({\n    isSupervisor: true,\n    effect: ''\n  });\n\n  const checkSessionExpiration = () => {\n    const isMyTokenExpired = isExpired(localStorage.getItem('token'));\n    return isMyTokenExpired;\n  }\n\n  useEffect(()=> {\n      checkSessionExpiration();\n      const tokenData = decodeToken(localStorage.getItem('token'));\n      setState({...state, userInfo: tokenData})\n  }, [])\n\n  return (\n    <Router>\n          <div className=\"App\">\n          <Switch>\n              <Route path=\"/home\" render={()=> (\n                !checkSessionExpiration() ? (\n                    <div className=\"app__home\">\n                      <Sidebar user={state.userInfo} />\n                      <Tabla/>\n                    </div> \n                  ) : ( \n                    <>\n                        { localStorage.removeItem('token') }\n                       <Redirect to=\"/login\" />\n                    </>)\n              )}> \n              </Route>\n              <Route path=\"/usuarios\" render={()=> (\n                  !checkSessionExpiration() ? (\n                      <div className=\"app__home\">\n                          <Sidebar user={state.userInfo}/>\n                          <Usuarios />\n                      </div>\n                  ) : (\n                    <>\n                        { localStorage.removeItem('token') }\n                       <Redirect to=\"/login\" />\n                    </>\n                  )\n              )}> \n              </Route>\n              <Route path=\"/perfil\" render={()=>(\n                !checkSessionExpiration() ? (\n                    <div className=\"app__home\">\n                        <Sidebar user={state.userInfo}/>\n                        <Perfil />\n                    </div>\n                ) : (\n                  <>\n                    { localStorage.removeItem('token') }\n                    <Redirect to=\"/login\" />\n                  </>    \n                )\n              )}> \n            \n              </Route>\n              <Route path=\"/altaUsuario\" render={()=>(\n                    !checkSessionExpiration() ? (\n                        <div className=\"app__home\">\n                            <Sidebar user={state.userInfo}/>\n                            <AltaUsuario />\n                        </div>\n                    ) : (\n                      <>\n                        { localStorage.removeItem('token') }\n                        <Redirect to=\"/login\" />\n                      </> \n                    )\n              )}> \n              </Route>\n              <Route path=\"/detalle\" render={()=>(\n                 !checkSessionExpiration() ? (\n                    <div className=\"app__home\">\n                        <Sidebar user={state.userInfo}/>\n                            <div className=\"app__navPregunta\">\n                                <NavCuestionario \n                                    user={state.userInfo}>\n                                </NavCuestionario>\n                            </div>\n                    </div>\n                 ) : (\n                  <>\n                      { localStorage.removeItem('token') }\n                    <Redirect to=\"/login\" />\n                  </> \n                 )  \n              )}>\n            </Route>\n              <Route path=\"/\"> \n                 <Login />\n              </Route>\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hourglass-regular.9d289f8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-solid.594fe4f2.svg\";"],"sourceRoot":""}